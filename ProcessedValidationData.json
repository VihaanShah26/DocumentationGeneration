{"code_tokens": ["def", "save_act", "(", "self", ",", "path", "=", "None", ")", ":", "if", "path", "is", "None", ":", "path", "=", "os", ".", "path", ".", "join", "(", "logger", ".", "get_dir", "(", ")", ",", "\"model.pkl\"", ")", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "td", ":", "save_variables", "(", "os", ".", "path", ".", "join", "(", "td", ",", "\"model\"", ")", ")", "arc_name", "=", "os", ".", "path", ".", "join", "(", "td", ",", "\"packed.zip\"", ")", "with", "zipfile", ".", "ZipFile", "(", "arc_name", ",", "'w'", ")", "as", "zipf", ":", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "td", ")", ":", "for", "fname", "in", "files", ":", "file_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "if", "file_path", "!=", "arc_name", ":", "zipf", ".", "write", "(", "file_path", ",", "os", ".", "path", ".", "relpath", "(", "file_path", ",", "td", ")", ")", "with", "open", "(", "arc_name", ",", "\"rb\"", ")", "as", "f", ":", "model_data", "=", "f", ".", "read", "(", ")", "with", "open", "(", "path", ",", "\"wb\"", ")", "as", "f", ":", "cloudpickle", ".", "dump", "(", "(", "model_data", ",", "self", ".", "_act_params", ")", ",", "f", ")"], "docstring_tokens": ["Save", "model", "to", "a", "pickle", "located", "at", "path"]}
{"code_tokens": ["def", "nature_cnn", "(", "unscaled_images", ",", "*", "*", "conv_kwargs", ")", ":", "scaled_images", "=", "tf", ".", "cast", "(", "unscaled_images", ",", "tf", ".", "float32", ")", "/", "255.", "activ", "=", "tf", ".", "nn", ".", "relu", "h", "=", "activ", "(", "conv", "(", "scaled_images", ",", "'c1'", ",", "nf", "=", "32", ",", "rf", "=", "8", ",", "stride", "=", "4", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ",", "*", "*", "conv_kwargs", ")", ")", "h2", "=", "activ", "(", "conv", "(", "h", ",", "'c2'", ",", "nf", "=", "64", ",", "rf", "=", "4", ",", "stride", "=", "2", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ",", "*", "*", "conv_kwargs", ")", ")", "h3", "=", "activ", "(", "conv", "(", "h2", ",", "'c3'", ",", "nf", "=", "64", ",", "rf", "=", "3", ",", "stride", "=", "1", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ",", "*", "*", "conv_kwargs", ")", ")", "h3", "=", "conv_to_fc", "(", "h3", ")", "return", "activ", "(", "fc", "(", "h3", ",", "'fc1'", ",", "nh", "=", "512", ",", "init_scale", "=", "np", ".", "sqrt", "(", "2", ")", ")", ")"], "docstring_tokens": ["CNN", "from", "Nature", "paper", "."]}
{"code_tokens": ["def", "conv_only", "(", "convs", "=", "[", "(", "32", ",", "8", ",", "4", ")", ",", "(", "64", ",", "4", ",", "2", ")", ",", "(", "64", ",", "3", ",", "1", ")", "]", ",", "*", "*", "conv_kwargs", ")", ":", "def", "network_fn", "(", "X", ")", ":", "out", "=", "tf", ".", "cast", "(", "X", ",", "tf", ".", "float32", ")", "/", "255.", "with", "tf", ".", "variable_scope", "(", "\"convnet\"", ")", ":", "for", "num_outputs", ",", "kernel_size", ",", "stride", "in", "convs", ":", "out", "=", "layers", ".", "convolution2d", "(", "out", ",", "num_outputs", "=", "num_outputs", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "*", "*", "conv_kwargs", ")", "return", "out", "return", "network_fn"], "docstring_tokens": ["convolutions", "-", "only", "net"]}
{"code_tokens": ["def", "make_vec_env", "(", "env_id", ",", "env_type", ",", "num_env", ",", "seed", ",", "wrapper_kwargs", "=", "None", ",", "start_index", "=", "0", ",", "reward_scale", "=", "1.0", ",", "flatten_dict_observations", "=", "True", ",", "gamestate", "=", "None", ")", ":", "wrapper_kwargs", "=", "wrapper_kwargs", "or", "{", "}", "mpi_rank", "=", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "if", "MPI", "else", "0", "seed", "=", "seed", "+", "10000", "*", "mpi_rank", "if", "seed", "is", "not", "None", "else", "None", "logger_dir", "=", "logger", ".", "get_dir", "(", ")", "def", "make_thunk", "(", "rank", ")", ":", "return", "lambda", ":", "make_env", "(", "env_id", "=", "env_id", ",", "env_type", "=", "env_type", ",", "mpi_rank", "=", "mpi_rank", ",", "subrank", "=", "rank", ",", "seed", "=", "seed", ",", "reward_scale", "=", "reward_scale", ",", "gamestate", "=", "gamestate", ",", "flatten_dict_observations", "=", "flatten_dict_observations", ",", "wrapper_kwargs", "=", "wrapper_kwargs", ",", "logger_dir", "=", "logger_dir", ")", "set_global_seeds", "(", "seed", ")", "if", "num_env", ">", "1", ":", "return", "SubprocVecEnv", "(", "[", "make_thunk", "(", "i", "+", "start_index", ")", "for", "i", "in", "range", "(", "num_env", ")", "]", ")", "else", ":", "return", "DummyVecEnv", "(", "[", "make_thunk", "(", "start_index", ")", "]", ")"], "docstring_tokens": ["Create", "a", "wrapped", "monitored", "SubprocVecEnv", "for", "Atari", "and", "MuJoCo", "."]}
{"code_tokens": ["def", "parse_unknown_args", "(", "args", ")", ":", "retval", "=", "{", "}", "preceded_by_key", "=", "False", "for", "arg", "in", "args", ":", "if", "arg", ".", "startswith", "(", "'--'", ")", ":", "if", "'='", "in", "arg", ":", "key", "=", "arg", ".", "split", "(", "'='", ")", "[", "0", "]", "[", "2", ":", "]", "value", "=", "arg", ".", "split", "(", "'='", ")", "[", "1", "]", "retval", "[", "key", "]", "=", "value", "else", ":", "key", "=", "arg", "[", "2", ":", "]", "preceded_by_key", "=", "True", "elif", "preceded_by_key", ":", "retval", "[", "key", "]", "=", "arg", "preceded_by_key", "=", "False", "return", "retval"], "docstring_tokens": ["Parse", "arguments", "not", "consumed", "by", "arg", "parser", "into", "a", "dicitonary"]}
{"code_tokens": ["def", "clear_mpi_env_vars", "(", ")", ":", "removed_environment", "=", "{", "}", "for", "k", ",", "v", "in", "list", "(", "os", ".", "environ", ".", "items", "(", ")", ")", ":", "for", "prefix", "in", "[", "'OMPI_'", ",", "'PMI_'", "]", ":", "if", "k", ".", "startswith", "(", "prefix", ")", ":", "removed_environment", "[", "k", "]", "=", "v", "del", "os", ".", "environ", "[", "k", "]", "try", ":", "yield", "finally", ":", "os", ".", "environ", ".", "update", "(", "removed_environment", ")"], "docstring_tokens": ["from", "mpi4py", "import", "MPI", "will", "call", "MPI_Init", "by", "default", ".", "If", "the", "child", "process", "has", "MPI", "environment", "variables", "MPI", "will", "think", "that", "the", "child", "process", "is", "an", "MPI", "process", "just", "like", "the", "parent", "and", "do", "bad", "things", "such", "as", "hang", ".", "This", "context", "manager", "is", "a", "hacky", "way", "to", "clear", "those", "environment", "variables", "temporarily", "such", "as", "when", "we", "are", "starting", "multiprocessing", "Processes", "."]}
{"code_tokens": ["def", "cg", "(", "f_Ax", ",", "b", ",", "cg_iters", "=", "10", ",", "callback", "=", "None", ",", "verbose", "=", "False", ",", "residual_tol", "=", "1e-10", ")", ":", "p", "=", "b", ".", "copy", "(", ")", "r", "=", "b", ".", "copy", "(", ")", "x", "=", "np", ".", "zeros_like", "(", "b", ")", "rdotr", "=", "r", ".", "dot", "(", "r", ")", "fmtstr", "=", "\"%10i %10.3g %10.3g\"", "titlestr", "=", "\"%10s %10s %10s\"", "if", "verbose", ":", "print", "(", "titlestr", "%", "(", "\"iter\"", ",", "\"residual norm\"", ",", "\"soln norm\"", ")", ")", "for", "i", "in", "range", "(", "cg_iters", ")", ":", "if", "callback", "is", "not", "None", ":", "callback", "(", "x", ")", "if", "verbose", ":", "print", "(", "fmtstr", "%", "(", "i", ",", "rdotr", ",", "np", ".", "linalg", ".", "norm", "(", "x", ")", ")", ")", "z", "=", "f_Ax", "(", "p", ")", "v", "=", "rdotr", "/", "p", ".", "dot", "(", "z", ")", "x", "+=", "v", "*", "p", "r", "-=", "v", "*", "z", "newrdotr", "=", "r", ".", "dot", "(", "r", ")", "mu", "=", "newrdotr", "/", "rdotr", "p", "=", "r", "+", "mu", "*", "p", "rdotr", "=", "newrdotr", "if", "rdotr", "<", "residual_tol", ":", "break", "if", "callback", "is", "not", "None", ":", "callback", "(", "x", ")", "if", "verbose", ":", "print", "(", "fmtstr", "%", "(", "i", "+", "1", ",", "rdotr", ",", "np", ".", "linalg", ".", "norm", "(", "x", ")", ")", ")", "# pylint: disable=W0631", "return", "x"], "docstring_tokens": ["Demmel", "p", "312"]}
{"code_tokens": ["def", "observation_placeholder", "(", "ob_space", ",", "batch_size", "=", "None", ",", "name", "=", "'Ob'", ")", ":", "assert", "isinstance", "(", "ob_space", ",", "Discrete", ")", "or", "isinstance", "(", "ob_space", ",", "Box", ")", "or", "isinstance", "(", "ob_space", ",", "MultiDiscrete", ")", ",", "'Can only deal with Discrete and Box observation spaces for now'", "dtype", "=", "ob_space", ".", "dtype", "if", "dtype", "==", "np", ".", "int8", ":", "dtype", "=", "np", ".", "uint8", "return", "tf", ".", "placeholder", "(", "shape", "=", "(", "batch_size", ",", ")", "+", "ob_space", ".", "shape", ",", "dtype", "=", "dtype", ",", "name", "=", "name", ")"], "docstring_tokens": ["Create", "placeholder", "to", "feed", "observations", "into", "of", "the", "size", "appropriate", "to", "the", "observation", "space"]}
{"code_tokens": ["def", "observation_input", "(", "ob_space", ",", "batch_size", "=", "None", ",", "name", "=", "'Ob'", ")", ":", "placeholder", "=", "observation_placeholder", "(", "ob_space", ",", "batch_size", ",", "name", ")", "return", "placeholder", ",", "encode_observation", "(", "ob_space", ",", "placeholder", ")"], "docstring_tokens": ["Create", "placeholder", "to", "feed", "observations", "into", "of", "the", "size", "appropriate", "to", "the", "observation", "space", "and", "add", "input", "encoder", "of", "the", "appropriate", "type", "."]}
{"code_tokens": ["def", "encode_observation", "(", "ob_space", ",", "placeholder", ")", ":", "if", "isinstance", "(", "ob_space", ",", "Discrete", ")", ":", "return", "tf", ".", "to_float", "(", "tf", ".", "one_hot", "(", "placeholder", ",", "ob_space", ".", "n", ")", ")", "elif", "isinstance", "(", "ob_space", ",", "Box", ")", ":", "return", "tf", ".", "to_float", "(", "placeholder", ")", "elif", "isinstance", "(", "ob_space", ",", "MultiDiscrete", ")", ":", "placeholder", "=", "tf", ".", "cast", "(", "placeholder", ",", "tf", ".", "int32", ")", "one_hots", "=", "[", "tf", ".", "to_float", "(", "tf", ".", "one_hot", "(", "placeholder", "[", "...", ",", "i", "]", ",", "ob_space", ".", "nvec", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "placeholder", ".", "shape", "[", "-", "1", "]", ")", "]", "return", "tf", ".", "concat", "(", "one_hots", ",", "axis", "=", "-", "1", ")", "else", ":", "raise", "NotImplementedError"], "docstring_tokens": ["Encode", "input", "in", "the", "way", "that", "is", "appropriate", "to", "the", "observation", "space"]}
{"code_tokens": ["def", "save_policy", "(", "self", ",", "path", ")", ":", "with", "open", "(", "path", ",", "'wb'", ")", "as", "f", ":", "pickle", ".", "dump", "(", "self", ".", "policy", ",", "f", ")"], "docstring_tokens": ["Pickles", "the", "current", "policy", "for", "later", "inspection", "."]}
{"code_tokens": ["def", "logs", "(", "self", ",", "prefix", "=", "'worker'", ")", ":", "logs", "=", "[", "]", "logs", "+=", "[", "(", "'success_rate'", ",", "np", ".", "mean", "(", "self", ".", "success_history", ")", ")", "]", "if", "self", ".", "compute_Q", ":", "logs", "+=", "[", "(", "'mean_Q'", ",", "np", ".", "mean", "(", "self", ".", "Q_history", ")", ")", "]", "logs", "+=", "[", "(", "'episode'", ",", "self", ".", "n_episodes", ")", "]", "if", "prefix", "!=", "''", "and", "not", "prefix", ".", "endswith", "(", "'/'", ")", ":", "return", "[", "(", "prefix", "+", "'/'", "+", "key", ",", "val", ")", "for", "key", ",", "val", "in", "logs", "]", "else", ":", "return", "logs"], "docstring_tokens": ["Generates", "a", "dictionary", "that", "contains", "all", "collected", "statistics", "."]}
{"code_tokens": ["def", "smooth", "(", "y", ",", "radius", ",", "mode", "=", "'two_sided'", ",", "valid_only", "=", "False", ")", ":", "assert", "mode", "in", "(", "'two_sided'", ",", "'causal'", ")", "if", "len", "(", "y", ")", "<", "2", "*", "radius", "+", "1", ":", "return", "np", ".", "ones_like", "(", "y", ")", "*", "y", ".", "mean", "(", ")", "elif", "mode", "==", "'two_sided'", ":", "convkernel", "=", "np", ".", "ones", "(", "2", "*", "radius", "+", "1", ")", "out", "=", "np", ".", "convolve", "(", "y", ",", "convkernel", ",", "mode", "=", "'same'", ")", "/", "np", ".", "convolve", "(", "np", ".", "ones_like", "(", "y", ")", ",", "convkernel", ",", "mode", "=", "'same'", ")", "if", "valid_only", ":", "out", "[", ":", "radius", "]", "=", "out", "[", "-", "radius", ":", "]", "=", "np", ".", "nan", "elif", "mode", "==", "'causal'", ":", "convkernel", "=", "np", ".", "ones", "(", "radius", ")", "out", "=", "np", ".", "convolve", "(", "y", ",", "convkernel", ",", "mode", "=", "'full'", ")", "/", "np", ".", "convolve", "(", "np", ".", "ones_like", "(", "y", ")", ",", "convkernel", ",", "mode", "=", "'full'", ")", "out", "=", "out", "[", ":", "-", "radius", "+", "1", "]", "if", "valid_only", ":", "out", "[", ":", "radius", "]", "=", "np", ".", "nan", "return", "out"], "docstring_tokens": ["Smooth", "signal", "y", "where", "radius", "is", "determines", "the", "size", "of", "the", "window"]}
{"code_tokens": ["def", "copy_obs_dict", "(", "obs", ")", ":", "return", "{", "k", ":", "np", ".", "copy", "(", "v", ")", "for", "k", ",", "v", "in", "obs", ".", "items", "(", ")", "}"], "docstring_tokens": ["Deep", "-", "copy", "an", "observation", "dict", "."]}
{"code_tokens": ["def", "obs_space_info", "(", "obs_space", ")", ":", "if", "isinstance", "(", "obs_space", ",", "gym", ".", "spaces", ".", "Dict", ")", ":", "assert", "isinstance", "(", "obs_space", ".", "spaces", ",", "OrderedDict", ")", "subspaces", "=", "obs_space", ".", "spaces", "else", ":", "subspaces", "=", "{", "None", ":", "obs_space", "}", "keys", "=", "[", "]", "shapes", "=", "{", "}", "dtypes", "=", "{", "}", "for", "key", ",", "box", "in", "subspaces", ".", "items", "(", ")", ":", "keys", ".", "append", "(", "key", ")", "shapes", "[", "key", "]", "=", "box", ".", "shape", "dtypes", "[", "key", "]", "=", "box", ".", "dtype", "return", "keys", ",", "shapes", ",", "dtypes"], "docstring_tokens": ["Get", "dict", "-", "structured", "information", "about", "a", "gym", ".", "Space", "."]}
{"code_tokens": ["def", "q_retrace", "(", "R", ",", "D", ",", "q_i", ",", "v", ",", "rho_i", ",", "nenvs", ",", "nsteps", ",", "gamma", ")", ":", "rho_bar", "=", "batch_to_seq", "(", "tf", ".", "minimum", "(", "1.0", ",", "rho_i", ")", ",", "nenvs", ",", "nsteps", ",", "True", ")", "# list of len steps, shape [nenvs]", "rs", "=", "batch_to_seq", "(", "R", ",", "nenvs", ",", "nsteps", ",", "True", ")", "# list of len steps, shape [nenvs]", "ds", "=", "batch_to_seq", "(", "D", ",", "nenvs", ",", "nsteps", ",", "True", ")", "# list of len steps, shape [nenvs]", "q_is", "=", "batch_to_seq", "(", "q_i", ",", "nenvs", ",", "nsteps", ",", "True", ")", "vs", "=", "batch_to_seq", "(", "v", ",", "nenvs", ",", "nsteps", "+", "1", ",", "True", ")", "v_final", "=", "vs", "[", "-", "1", "]", "qret", "=", "v_final", "qrets", "=", "[", "]", "for", "i", "in", "range", "(", "nsteps", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "check_shape", "(", "[", "qret", ",", "ds", "[", "i", "]", ",", "rs", "[", "i", "]", ",", "rho_bar", "[", "i", "]", ",", "q_is", "[", "i", "]", ",", "vs", "[", "i", "]", "]", ",", "[", "[", "nenvs", "]", "]", "*", "6", ")", "qret", "=", "rs", "[", "i", "]", "+", "gamma", "*", "qret", "*", "(", "1.0", "-", "ds", "[", "i", "]", ")", "qrets", ".", "append", "(", "qret", ")", "qret", "=", "(", "rho_bar", "[", "i", "]", "*", "(", "qret", "-", "q_is", "[", "i", "]", ")", ")", "+", "vs", "[", "i", "]", "qrets", "=", "qrets", "[", ":", ":", "-", "1", "]", "qret", "=", "seq_to_batch", "(", "qrets", ",", "flat", "=", "True", ")", "return", "qret"], "docstring_tokens": ["Calculates", "q_retrace", "targets"]}
{"code_tokens": ["def", "value", "(", "self", ",", "t", ")", ":", "for", "(", "l_t", ",", "l", ")", ",", "(", "r_t", ",", "r", ")", "in", "zip", "(", "self", ".", "_endpoints", "[", ":", "-", "1", "]", ",", "self", ".", "_endpoints", "[", "1", ":", "]", ")", ":", "if", "l_t", "<=", "t", "and", "t", "<", "r_t", ":", "alpha", "=", "float", "(", "t", "-", "l_t", ")", "/", "(", "r_t", "-", "l_t", ")", "return", "self", ".", "_interpolation", "(", "l", ",", "r", ",", "alpha", ")", "# t does not belong to any of the pieces, so doom.", "assert", "self", ".", "_outside_value", "is", "not", "None", "return", "self", ".", "_outside_value"], "docstring_tokens": ["See", "Schedule", ".", "value"]}
{"code_tokens": ["def", "_subproc_worker", "(", "pipe", ",", "parent_pipe", ",", "env_fn_wrapper", ",", "obs_bufs", ",", "obs_shapes", ",", "obs_dtypes", ",", "keys", ")", ":", "def", "_write_obs", "(", "maybe_dict_obs", ")", ":", "flatdict", "=", "obs_to_dict", "(", "maybe_dict_obs", ")", "for", "k", "in", "keys", ":", "dst", "=", "obs_bufs", "[", "k", "]", ".", "get_obj", "(", ")", "dst_np", "=", "np", ".", "frombuffer", "(", "dst", ",", "dtype", "=", "obs_dtypes", "[", "k", "]", ")", ".", "reshape", "(", "obs_shapes", "[", "k", "]", ")", "# pylint: disable=W0212", "np", ".", "copyto", "(", "dst_np", ",", "flatdict", "[", "k", "]", ")", "env", "=", "env_fn_wrapper", ".", "x", "(", ")", "parent_pipe", ".", "close", "(", ")", "try", ":", "while", "True", ":", "cmd", ",", "data", "=", "pipe", ".", "recv", "(", ")", "if", "cmd", "==", "'reset'", ":", "pipe", ".", "send", "(", "_write_obs", "(", "env", ".", "reset", "(", ")", ")", ")", "elif", "cmd", "==", "'step'", ":", "obs", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "data", ")", "if", "done", ":", "obs", "=", "env", ".", "reset", "(", ")", "pipe", ".", "send", "(", "(", "_write_obs", "(", "obs", ")", ",", "reward", ",", "done", ",", "info", ")", ")", "elif", "cmd", "==", "'render'", ":", "pipe", ".", "send", "(", "env", ".", "render", "(", "mode", "=", "'rgb_array'", ")", ")", "elif", "cmd", "==", "'close'", ":", "pipe", ".", "send", "(", "None", ")", "break", "else", ":", "raise", "RuntimeError", "(", "'Got unrecognized cmd %s'", "%", "cmd", ")", "except", "KeyboardInterrupt", ":", "print", "(", "'ShmemVecEnv worker: got KeyboardInterrupt'", ")", "finally", ":", "env", ".", "close", "(", ")"], "docstring_tokens": ["Control", "a", "single", "environment", "instance", "using", "IPC", "and", "shared", "memory", "."]}
{"code_tokens": ["def", "learn", "(", "network", ",", "env", ",", "seed", "=", "None", ",", "nsteps", "=", "5", ",", "total_timesteps", "=", "int", "(", "80e6", ")", ",", "vf_coef", "=", "0.5", ",", "ent_coef", "=", "0.01", ",", "max_grad_norm", "=", "0.5", ",", "lr", "=", "7e-4", ",", "lrschedule", "=", "'linear'", ",", "epsilon", "=", "1e-5", ",", "alpha", "=", "0.99", ",", "gamma", "=", "0.99", ",", "log_interval", "=", "100", ",", "load_path", "=", "None", ",", "*", "*", "network_kwargs", ")", ":", "set_global_seeds", "(", "seed", ")", "# Get the nb of env", "nenvs", "=", "env", ".", "num_envs", "policy", "=", "build_policy", "(", "env", ",", "network", ",", "*", "*", "network_kwargs", ")", "# Instantiate the model object (that creates step_model and train_model)", "model", "=", "Model", "(", "policy", "=", "policy", ",", "env", "=", "env", ",", "nsteps", "=", "nsteps", ",", "ent_coef", "=", "ent_coef", ",", "vf_coef", "=", "vf_coef", ",", "max_grad_norm", "=", "max_grad_norm", ",", "lr", "=", "lr", ",", "alpha", "=", "alpha", ",", "epsilon", "=", "epsilon", ",", "total_timesteps", "=", "total_timesteps", ",", "lrschedule", "=", "lrschedule", ")", "if", "load_path", "is", "not", "None", ":", "model", ".", "load", "(", "load_path", ")", "# Instantiate the runner object", "runner", "=", "Runner", "(", "env", ",", "model", ",", "nsteps", "=", "nsteps", ",", "gamma", "=", "gamma", ")", "epinfobuf", "=", "deque", "(", "maxlen", "=", "100", ")", "# Calculate the batch_size", "nbatch", "=", "nenvs", "*", "nsteps", "# Start total timer", "tstart", "=", "time", ".", "time", "(", ")", "for", "update", "in", "range", "(", "1", ",", "total_timesteps", "//", "nbatch", "+", "1", ")", ":", "# Get mini batch of experiences", "obs", ",", "states", ",", "rewards", ",", "masks", ",", "actions", ",", "values", ",", "epinfos", "=", "runner", ".", "run", "(", ")", "epinfobuf", ".", "extend", "(", "epinfos", ")", "policy_loss", ",", "value_loss", ",", "policy_entropy", "=", "model", ".", "train", "(", "obs", ",", "states", ",", "rewards", ",", "masks", ",", "actions", ",", "values", ")", "nseconds", "=", "time", ".", "time", "(", ")", "-", "tstart", "# Calculate the fps (frame per second)", "fps", "=", "int", "(", "(", "update", "*", "nbatch", ")", "/", "nseconds", ")", "if", "update", "%", "log_interval", "==", "0", "or", "update", "==", "1", ":", "# Calculates if value function is a good predicator of the returns (ev > 1)", "# or if it's just worse than predicting nothing (ev =< 0)", "ev", "=", "explained_variance", "(", "values", ",", "rewards", ")", "logger", ".", "record_tabular", "(", "\"nupdates\"", ",", "update", ")", "logger", ".", "record_tabular", "(", "\"total_timesteps\"", ",", "update", "*", "nbatch", ")", "logger", ".", "record_tabular", "(", "\"fps\"", ",", "fps", ")", "logger", ".", "record_tabular", "(", "\"policy_entropy\"", ",", "float", "(", "policy_entropy", ")", ")", "logger", ".", "record_tabular", "(", "\"value_loss\"", ",", "float", "(", "value_loss", ")", ")", "logger", ".", "record_tabular", "(", "\"explained_variance\"", ",", "float", "(", "ev", ")", ")", "logger", ".", "record_tabular", "(", "\"eprewmean\"", ",", "safemean", "(", "[", "epinfo", "[", "'r'", "]", "for", "epinfo", "in", "epinfobuf", "]", ")", ")", "logger", ".", "record_tabular", "(", "\"eplenmean\"", ",", "safemean", "(", "[", "epinfo", "[", "'l'", "]", "for", "epinfo", "in", "epinfobuf", "]", ")", ")", "logger", ".", "dump_tabular", "(", ")", "return", "model"], "docstring_tokens": ["Main", "entrypoint", "for", "A2C", "algorithm", ".", "Train", "a", "policy", "with", "given", "network", "architecture", "on", "a", "given", "environment", "using", "a2c", "algorithm", "."]}
{"code_tokens": ["def", "sf01", "(", "arr", ")", ":", "s", "=", "arr", ".", "shape", "return", "arr", ".", "swapaxes", "(", "0", ",", "1", ")", ".", "reshape", "(", "s", "[", "0", "]", "*", "s", "[", "1", "]", ",", "*", "s", "[", "2", ":", "]", ")"], "docstring_tokens": ["swap", "and", "then", "flatten", "axes", "0", "and", "1"]}
{"code_tokens": ["def", "pretty_eta", "(", "seconds_left", ")", ":", "minutes_left", "=", "seconds_left", "//", "60", "seconds_left", "%=", "60", "hours_left", "=", "minutes_left", "//", "60", "minutes_left", "%=", "60", "days_left", "=", "hours_left", "//", "24", "hours_left", "%=", "24", "def", "helper", "(", "cnt", ",", "name", ")", ":", "return", "\"{} {}{}\"", ".", "format", "(", "str", "(", "cnt", ")", ",", "name", ",", "(", "'s'", "if", "cnt", ">", "1", "else", "''", ")", ")", "if", "days_left", ">", "0", ":", "msg", "=", "helper", "(", "days_left", ",", "'day'", ")", "if", "hours_left", ">", "0", ":", "msg", "+=", "' and '", "+", "helper", "(", "hours_left", ",", "'hour'", ")", "return", "msg", "if", "hours_left", ">", "0", ":", "msg", "=", "helper", "(", "hours_left", ",", "'hour'", ")", "if", "minutes_left", ">", "0", ":", "msg", "+=", "' and '", "+", "helper", "(", "minutes_left", ",", "'minute'", ")", "return", "msg", "if", "minutes_left", ">", "0", ":", "return", "helper", "(", "minutes_left", ",", "'minute'", ")", "return", "'less than a minute'"], "docstring_tokens": ["Print", "the", "number", "of", "seconds", "in", "human", "readable", "format", "."]}
{"code_tokens": ["def", "boolean_flag", "(", "parser", ",", "name", ",", "default", "=", "False", ",", "help", "=", "None", ")", ":", "dest", "=", "name", ".", "replace", "(", "'-'", ",", "'_'", ")", "parser", ".", "add_argument", "(", "\"--\"", "+", "name", ",", "action", "=", "\"store_true\"", ",", "default", "=", "default", ",", "dest", "=", "dest", ",", "help", "=", "help", ")", "parser", ".", "add_argument", "(", "\"--no-\"", "+", "name", ",", "action", "=", "\"store_false\"", ",", "dest", "=", "dest", ")"], "docstring_tokens": ["Add", "a", "boolean", "flag", "to", "argparse", "parser", "."]}
{"code_tokens": ["def", "get_wrapper_by_name", "(", "env", ",", "classname", ")", ":", "currentenv", "=", "env", "while", "True", ":", "if", "classname", "==", "currentenv", ".", "class_name", "(", ")", ":", "return", "currentenv", "elif", "isinstance", "(", "currentenv", ",", "gym", ".", "Wrapper", ")", ":", "currentenv", "=", "currentenv", ".", "env", "else", ":", "raise", "ValueError", "(", "\"Couldn't find wrapper named %s\"", "%", "classname", ")"], "docstring_tokens": ["Given", "an", "a", "gym", "environment", "possibly", "wrapped", "multiple", "times", "returns", "a", "wrapper", "of", "class", "named", "classname", "or", "raises", "ValueError", "if", "no", "such", "wrapper", "was", "applied"]}
{"code_tokens": ["def", "pickle_load", "(", "path", ",", "compression", "=", "False", ")", ":", "if", "compression", ":", "with", "zipfile", ".", "ZipFile", "(", "path", ",", "\"r\"", ",", "compression", "=", "zipfile", ".", "ZIP_DEFLATED", ")", "as", "myzip", ":", "with", "myzip", ".", "open", "(", "\"data\"", ")", "as", "f", ":", "return", "pickle", ".", "load", "(", "f", ")", "else", ":", "with", "open", "(", "path", ",", "\"rb\"", ")", "as", "f", ":", "return", "pickle", ".", "load", "(", "f", ")"], "docstring_tokens": ["Unpickle", "a", "possible", "compressed", "pickle", "."]}
{"code_tokens": ["def", "update", "(", "self", ",", "new_val", ")", ":", "if", "self", ".", "_value", "is", "None", ":", "self", ".", "_value", "=", "new_val", "else", ":", "self", ".", "_value", "=", "self", ".", "_gamma", "*", "self", ".", "_value", "+", "(", "1.0", "-", "self", ".", "_gamma", ")", "*", "new_val"], "docstring_tokens": ["Update", "the", "estimate", "."]}
{"code_tokens": ["def", "store_args", "(", "method", ")", ":", "argspec", "=", "inspect", ".", "getfullargspec", "(", "method", ")", "defaults", "=", "{", "}", "if", "argspec", ".", "defaults", "is", "not", "None", ":", "defaults", "=", "dict", "(", "zip", "(", "argspec", ".", "args", "[", "-", "len", "(", "argspec", ".", "defaults", ")", ":", "]", ",", "argspec", ".", "defaults", ")", ")", "if", "argspec", ".", "kwonlydefaults", "is", "not", "None", ":", "defaults", ".", "update", "(", "argspec", ".", "kwonlydefaults", ")", "arg_names", "=", "argspec", ".", "args", "[", "1", ":", "]", "@", "functools", ".", "wraps", "(", "method", ")", "def", "wrapper", "(", "*", "positional_args", ",", "*", "*", "keyword_args", ")", ":", "self", "=", "positional_args", "[", "0", "]", "# Get default arg values", "args", "=", "defaults", ".", "copy", "(", ")", "# Add provided arg values", "for", "name", ",", "value", "in", "zip", "(", "arg_names", ",", "positional_args", "[", "1", ":", "]", ")", ":", "args", "[", "name", "]", "=", "value", "args", ".", "update", "(", "keyword_args", ")", "self", ".", "__dict__", ".", "update", "(", "args", ")", "return", "method", "(", "*", "positional_args", ",", "*", "*", "keyword_args", ")", "return", "wrapper"], "docstring_tokens": ["Stores", "provided", "method", "args", "as", "instance", "attributes", "."]}
{"code_tokens": ["def", "flatten_grads", "(", "var_list", ",", "grads", ")", ":", "return", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "grad", ",", "[", "U", ".", "numel", "(", "v", ")", "]", ")", "for", "(", "v", ",", "grad", ")", "in", "zip", "(", "var_list", ",", "grads", ")", "]", ",", "0", ")"], "docstring_tokens": ["Flattens", "a", "variables", "and", "their", "gradients", "."]}
{"code_tokens": ["def", "nn", "(", "input", ",", "layers_sizes", ",", "reuse", "=", "None", ",", "flatten", "=", "False", ",", "name", "=", "\"\"", ")", ":", "for", "i", ",", "size", "in", "enumerate", "(", "layers_sizes", ")", ":", "activation", "=", "tf", ".", "nn", ".", "relu", "if", "i", "<", "len", "(", "layers_sizes", ")", "-", "1", "else", "None", "input", "=", "tf", ".", "layers", ".", "dense", "(", "inputs", "=", "input", ",", "units", "=", "size", ",", "kernel_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "reuse", "=", "reuse", ",", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", ")", ")", "if", "activation", ":", "input", "=", "activation", "(", "input", ")", "if", "flatten", ":", "assert", "layers_sizes", "[", "-", "1", "]", "==", "1", "input", "=", "tf", ".", "reshape", "(", "input", ",", "[", "-", "1", "]", ")", "return", "input"], "docstring_tokens": ["Creates", "a", "simple", "neural", "network"]}
{"code_tokens": ["def", "mpi_fork", "(", "n", ",", "extra_mpi_args", "=", "[", "]", ")", ":", "if", "n", "<=", "1", ":", "return", "\"child\"", "if", "os", ".", "getenv", "(", "\"IN_MPI\"", ")", "is", "None", ":", "env", "=", "os", ".", "environ", ".", "copy", "(", ")", "env", ".", "update", "(", "MKL_NUM_THREADS", "=", "\"1\"", ",", "OMP_NUM_THREADS", "=", "\"1\"", ",", "IN_MPI", "=", "\"1\"", ")", "# \"-bind-to core\" is crucial for good performance", "args", "=", "[", "\"mpirun\"", ",", "\"-np\"", ",", "str", "(", "n", ")", "]", "+", "extra_mpi_args", "+", "[", "sys", ".", "executable", "]", "args", "+=", "sys", ".", "argv", "subprocess", ".", "check_call", "(", "args", ",", "env", "=", "env", ")", "return", "\"parent\"", "else", ":", "install_mpi_excepthook", "(", ")", "return", "\"child\""], "docstring_tokens": ["Re", "-", "launches", "the", "current", "script", "with", "workers", "Returns", "parent", "for", "original", "parent", "child", "for", "MPI", "children"]}
{"code_tokens": ["def", "get_session", "(", "config", "=", "None", ")", ":", "sess", "=", "tf", ".", "get_default_session", "(", ")", "if", "sess", "is", "None", ":", "sess", "=", "make_session", "(", "config", "=", "config", ",", "make_default", "=", "True", ")", "return", "sess"], "docstring_tokens": ["Get", "default", "session", "or", "create", "one", "with", "a", "given", "config"]}
{"code_tokens": ["def", "initialize", "(", ")", ":", "new_variables", "=", "set", "(", "tf", ".", "global_variables", "(", ")", ")", "-", "ALREADY_INITIALIZED", "get_session", "(", ")", ".", "run", "(", "tf", ".", "variables_initializer", "(", "new_variables", ")", ")", "ALREADY_INITIALIZED", ".", "update", "(", "new_variables", ")"], "docstring_tokens": ["Initialize", "all", "the", "uninitialized", "variables", "in", "the", "global", "scope", "."]}
{"code_tokens": ["def", "adjust_shape", "(", "placeholder", ",", "data", ")", ":", "if", "not", "isinstance", "(", "data", ",", "np", ".", "ndarray", ")", "and", "not", "isinstance", "(", "data", ",", "list", ")", ":", "return", "data", "if", "isinstance", "(", "data", ",", "list", ")", ":", "data", "=", "np", ".", "array", "(", "data", ")", "placeholder_shape", "=", "[", "x", "or", "-", "1", "for", "x", "in", "placeholder", ".", "shape", ".", "as_list", "(", ")", "]", "assert", "_check_shape", "(", "placeholder_shape", ",", "data", ".", "shape", ")", ",", "'Shape of data {} is not compatible with shape of the placeholder {}'", ".", "format", "(", "data", ".", "shape", ",", "placeholder_shape", ")", "return", "np", ".", "reshape", "(", "data", ",", "placeholder_shape", ")"], "docstring_tokens": ["adjust", "shape", "of", "the", "data", "to", "the", "shape", "of", "the", "placeholder", "if", "possible", ".", "If", "shape", "is", "incompatible", "AssertionError", "is", "thrown"]}
{"code_tokens": ["def", "wrap_deepmind", "(", "env", ",", "episode_life", "=", "True", ",", "clip_rewards", "=", "True", ",", "frame_stack", "=", "False", ",", "scale", "=", "False", ")", ":", "if", "episode_life", ":", "env", "=", "EpisodicLifeEnv", "(", "env", ")", "if", "'FIRE'", "in", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", ":", "env", "=", "FireResetEnv", "(", "env", ")", "env", "=", "WarpFrame", "(", "env", ")", "if", "scale", ":", "env", "=", "ScaledFloatFrame", "(", "env", ")", "if", "clip_rewards", ":", "env", "=", "ClipRewardEnv", "(", "env", ")", "if", "frame_stack", ":", "env", "=", "FrameStack", "(", "env", ",", "4", ")", "return", "env"], "docstring_tokens": ["Configure", "environment", "for", "DeepMind", "-", "style", "Atari", "."]}
{"code_tokens": ["def", "reset", "(", "self", ",", "*", "*", "kwargs", ")", ":", "if", "self", ".", "was_real_done", ":", "obs", "=", "self", ".", "env", ".", "reset", "(", "*", "*", "kwargs", ")", "else", ":", "# no-op step to advance from terminal/lost life state", "obs", ",", "_", ",", "_", ",", "_", "=", "self", ".", "env", ".", "step", "(", "0", ")", "self", ".", "lives", "=", "self", ".", "env", ".", "unwrapped", ".", "ale", ".", "lives", "(", ")", "return", "obs"], "docstring_tokens": ["Reset", "only", "when", "lives", "are", "exhausted", ".", "This", "way", "all", "states", "are", "still", "reachable", "even", "though", "lives", "are", "episodic", "and", "the", "learner", "need", "not", "know", "about", "any", "of", "this", "behind", "-", "the", "-", "scenes", "."]}
{"code_tokens": ["def", "gpu_count", "(", ")", ":", "if", "shutil", ".", "which", "(", "'nvidia-smi'", ")", "is", "None", ":", "return", "0", "output", "=", "subprocess", ".", "check_output", "(", "[", "'nvidia-smi'", ",", "'--query-gpu=gpu_name'", ",", "'--format=csv'", "]", ")", "return", "max", "(", "0", ",", "len", "(", "output", ".", "split", "(", "b'\\n'", ")", ")", "-", "2", ")"], "docstring_tokens": ["Count", "the", "GPUs", "on", "this", "machine", "."]}
{"code_tokens": ["def", "setup_mpi_gpus", "(", ")", ":", "if", "'CUDA_VISIBLE_DEVICES'", "not", "in", "os", ".", "environ", ":", "if", "sys", ".", "platform", "==", "'darwin'", ":", "# This Assumes if you're on OSX you're just", "ids", "=", "[", "]", "# doing a smoke test and don't want GPUs", "else", ":", "lrank", ",", "_lsize", "=", "get_local_rank_size", "(", "MPI", ".", "COMM_WORLD", ")", "ids", "=", "[", "lrank", "]", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "\",\"", ".", "join", "(", "map", "(", "str", ",", "ids", ")", ")"], "docstring_tokens": ["Set", "CUDA_VISIBLE_DEVICES", "to", "MPI", "rank", "if", "not", "already", "set"]}
{"code_tokens": ["def", "get_local_rank_size", "(", "comm", ")", ":", "this_node", "=", "platform", ".", "node", "(", ")", "ranks_nodes", "=", "comm", ".", "allgather", "(", "(", "comm", ".", "Get_rank", "(", ")", ",", "this_node", ")", ")", "node2rankssofar", "=", "defaultdict", "(", "int", ")", "local_rank", "=", "None", "for", "(", "rank", ",", "node", ")", "in", "ranks_nodes", ":", "if", "rank", "==", "comm", ".", "Get_rank", "(", ")", ":", "local_rank", "=", "node2rankssofar", "[", "node", "]", "node2rankssofar", "[", "node", "]", "+=", "1", "assert", "local_rank", "is", "not", "None", "return", "local_rank", ",", "node2rankssofar", "[", "this_node", "]"], "docstring_tokens": ["Returns", "the", "rank", "of", "each", "process", "on", "its", "machine", "The", "processes", "on", "a", "given", "machine", "will", "be", "assigned", "ranks", "0", "1", "2", "...", "N", "-", "1", "where", "N", "is", "the", "number", "of", "processes", "on", "this", "machine", "."]}
{"code_tokens": ["def", "share_file", "(", "comm", ",", "path", ")", ":", "localrank", ",", "_", "=", "get_local_rank_size", "(", "comm", ")", "if", "comm", ".", "Get_rank", "(", ")", "==", "0", ":", "with", "open", "(", "path", ",", "'rb'", ")", "as", "fh", ":", "data", "=", "fh", ".", "read", "(", ")", "comm", ".", "bcast", "(", "data", ")", "else", ":", "data", "=", "comm", ".", "bcast", "(", "None", ")", "if", "localrank", "==", "0", ":", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "path", ")", ",", "exist_ok", "=", "True", ")", "with", "open", "(", "path", ",", "'wb'", ")", "as", "fh", ":", "fh", ".", "write", "(", "data", ")", "comm", ".", "Barrier", "(", ")"], "docstring_tokens": ["Copies", "the", "file", "from", "rank", "0", "to", "all", "other", "ranks", "Puts", "it", "in", "the", "same", "place", "on", "all", "machines"]}
{"code_tokens": ["def", "dict_gather", "(", "comm", ",", "d", ",", "op", "=", "'mean'", ",", "assert_all_have_data", "=", "True", ")", ":", "if", "comm", "is", "None", ":", "return", "d", "alldicts", "=", "comm", ".", "allgather", "(", "d", ")", "size", "=", "comm", ".", "size", "k2li", "=", "defaultdict", "(", "list", ")", "for", "d", "in", "alldicts", ":", "for", "(", "k", ",", "v", ")", "in", "d", ".", "items", "(", ")", ":", "k2li", "[", "k", "]", ".", "append", "(", "v", ")", "result", "=", "{", "}", "for", "(", "k", ",", "li", ")", "in", "k2li", ".", "items", "(", ")", ":", "if", "assert_all_have_data", ":", "assert", "len", "(", "li", ")", "==", "size", ",", "\"only %i out of %i MPI workers have sent '%s'\"", "%", "(", "len", "(", "li", ")", ",", "size", ",", "k", ")", "if", "op", "==", "'mean'", ":", "result", "[", "k", "]", "=", "np", ".", "mean", "(", "li", ",", "axis", "=", "0", ")", "elif", "op", "==", "'sum'", ":", "result", "[", "k", "]", "=", "np", ".", "sum", "(", "li", ",", "axis", "=", "0", ")", "else", ":", "assert", "0", ",", "op", "return", "result"], "docstring_tokens": ["Perform", "a", "reduction", "operation", "over", "dicts"]}
{"code_tokens": ["def", "discount", "(", "x", ",", "gamma", ")", ":", "assert", "x", ".", "ndim", ">=", "1", "return", "scipy", ".", "signal", ".", "lfilter", "(", "[", "1", "]", ",", "[", "1", ",", "-", "gamma", "]", ",", "x", "[", ":", ":", "-", "1", "]", ",", "axis", "=", "0", ")", "[", ":", ":", "-", "1", "]"], "docstring_tokens": ["computes", "discounted", "sums", "along", "0th", "dimension", "of", "x", "."]}
{"code_tokens": ["def", "add", "(", "self", ",", "*", "args", ",", "*", "*", "kwargs", ")", ":", "idx", "=", "self", ".", "_next_idx", "super", "(", ")", ".", "add", "(", "*", "args", ",", "*", "*", "kwargs", ")", "self", ".", "_it_sum", "[", "idx", "]", "=", "self", ".", "_max_priority", "**", "self", ".", "_alpha", "self", ".", "_it_min", "[", "idx", "]", "=", "self", ".", "_max_priority", "**", "self", ".", "_alpha"], "docstring_tokens": ["See", "ReplayBuffer", ".", "store_effect"]}
{"code_tokens": ["def", "update_priorities", "(", "self", ",", "idxes", ",", "priorities", ")", ":", "assert", "len", "(", "idxes", ")", "==", "len", "(", "priorities", ")", "for", "idx", ",", "priority", "in", "zip", "(", "idxes", ",", "priorities", ")", ":", "assert", "priority", ">", "0", "assert", "0", "<=", "idx", "<", "len", "(", "self", ".", "_storage", ")", "self", ".", "_it_sum", "[", "idx", "]", "=", "priority", "**", "self", ".", "_alpha", "self", ".", "_it_min", "[", "idx", "]", "=", "priority", "**", "self", ".", "_alpha", "self", ".", "_max_priority", "=", "max", "(", "self", ".", "_max_priority", ",", "priority", ")"], "docstring_tokens": ["Update", "priorities", "of", "sampled", "transitions", "."]}
{"code_tokens": ["def", "wrap_deepmind_retro", "(", "env", ",", "scale", "=", "True", ",", "frame_stack", "=", "4", ")", ":", "env", "=", "WarpFrame", "(", "env", ")", "env", "=", "ClipRewardEnv", "(", "env", ")", "if", "frame_stack", ">", "1", ":", "env", "=", "FrameStack", "(", "env", ",", "frame_stack", ")", "if", "scale", ":", "env", "=", "ScaledFloatFrame", "(", "env", ")", "return", "env"], "docstring_tokens": ["Configure", "environment", "for", "retro", "games", "using", "config", "similar", "to", "DeepMind", "-", "style", "Atari", "in", "wrap_deepmind"]}
{"code_tokens": ["def", "make_sample_her_transitions", "(", "replay_strategy", ",", "replay_k", ",", "reward_fun", ")", ":", "if", "replay_strategy", "==", "'future'", ":", "future_p", "=", "1", "-", "(", "1.", "/", "(", "1", "+", "replay_k", ")", ")", "else", ":", "# 'replay_strategy' == 'none'", "future_p", "=", "0", "def", "_sample_her_transitions", "(", "episode_batch", ",", "batch_size_in_transitions", ")", ":", "\"\"\"episode_batch is {key: array(buffer_size x T x dim_key)}\n        \"\"\"", "T", "=", "episode_batch", "[", "'u'", "]", ".", "shape", "[", "1", "]", "rollout_batch_size", "=", "episode_batch", "[", "'u'", "]", ".", "shape", "[", "0", "]", "batch_size", "=", "batch_size_in_transitions", "# Select which episodes and time steps to use.", "episode_idxs", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "rollout_batch_size", ",", "batch_size", ")", "t_samples", "=", "np", ".", "random", ".", "randint", "(", "T", ",", "size", "=", "batch_size", ")", "transitions", "=", "{", "key", ":", "episode_batch", "[", "key", "]", "[", "episode_idxs", ",", "t_samples", "]", ".", "copy", "(", ")", "for", "key", "in", "episode_batch", ".", "keys", "(", ")", "}", "# Select future time indexes proportional with probability future_p. These", "# will be used for HER replay by substituting in future goals.", "her_indexes", "=", "np", ".", "where", "(", "np", ".", "random", ".", "uniform", "(", "size", "=", "batch_size", ")", "<", "future_p", ")", "future_offset", "=", "np", ".", "random", ".", "uniform", "(", "size", "=", "batch_size", ")", "*", "(", "T", "-", "t_samples", ")", "future_offset", "=", "future_offset", ".", "astype", "(", "int", ")", "future_t", "=", "(", "t_samples", "+", "1", "+", "future_offset", ")", "[", "her_indexes", "]", "# Replace goal with achieved goal but only for the previously-selected", "# HER transitions (as defined by her_indexes). For the other transitions,", "# keep the original goal.", "future_ag", "=", "episode_batch", "[", "'ag'", "]", "[", "episode_idxs", "[", "her_indexes", "]", ",", "future_t", "]", "transitions", "[", "'g'", "]", "[", "her_indexes", "]", "=", "future_ag", "# Reconstruct info dictionary for reward  computation.", "info", "=", "{", "}", "for", "key", ",", "value", "in", "transitions", ".", "items", "(", ")", ":", "if", "key", ".", "startswith", "(", "'info_'", ")", ":", "info", "[", "key", ".", "replace", "(", "'info_'", ",", "''", ")", "]", "=", "value", "# Re-compute reward since we may have substituted the goal.", "reward_params", "=", "{", "k", ":", "transitions", "[", "k", "]", "for", "k", "in", "[", "'ag_2'", ",", "'g'", "]", "}", "reward_params", "[", "'info'", "]", "=", "info", "transitions", "[", "'r'", "]", "=", "reward_fun", "(", "*", "*", "reward_params", ")", "transitions", "=", "{", "k", ":", "transitions", "[", "k", "]", ".", "reshape", "(", "batch_size", ",", "*", "transitions", "[", "k", "]", ".", "shape", "[", "1", ":", "]", ")", "for", "k", "in", "transitions", ".", "keys", "(", ")", "}", "assert", "(", "transitions", "[", "'u'", "]", ".", "shape", "[", "0", "]", "==", "batch_size_in_transitions", ")", "return", "transitions", "return", "_sample_her_transitions"], "docstring_tokens": ["Creates", "a", "sample", "function", "that", "can", "be", "used", "for", "HER", "experience", "replay", "."]}
{"code_tokens": ["def", "parse_cmdline_kwargs", "(", "args", ")", ":", "def", "parse", "(", "v", ")", ":", "assert", "isinstance", "(", "v", ",", "str", ")", "try", ":", "return", "eval", "(", "v", ")", "except", "(", "NameError", ",", "SyntaxError", ")", ":", "return", "v", "return", "{", "k", ":", "parse", "(", "v", ")", "for", "k", ",", "v", "in", "parse_unknown_args", "(", "args", ")", ".", "items", "(", ")", "}"], "docstring_tokens": ["convert", "a", "list", "of", "=", "-", "spaced", "command", "-", "line", "arguments", "to", "a", "dictionary", "evaluating", "python", "objects", "when", "possible"]}
{"code_tokens": ["def", "compute_geometric_median", "(", "X", ",", "eps", "=", "1e-5", ")", ":", "y", "=", "np", ".", "mean", "(", "X", ",", "0", ")", "while", "True", ":", "D", "=", "scipy", ".", "spatial", ".", "distance", ".", "cdist", "(", "X", ",", "[", "y", "]", ")", "nonzeros", "=", "(", "D", "!=", "0", ")", "[", ":", ",", "0", "]", "Dinv", "=", "1", "/", "D", "[", "nonzeros", "]", "Dinvs", "=", "np", ".", "sum", "(", "Dinv", ")", "W", "=", "Dinv", "/", "Dinvs", "T", "=", "np", ".", "sum", "(", "W", "*", "X", "[", "nonzeros", "]", ",", "0", ")", "num_zeros", "=", "len", "(", "X", ")", "-", "np", ".", "sum", "(", "nonzeros", ")", "if", "num_zeros", "==", "0", ":", "y1", "=", "T", "elif", "num_zeros", "==", "len", "(", "X", ")", ":", "return", "y", "else", ":", "R", "=", "(", "T", "-", "y", ")", "*", "Dinvs", "r", "=", "np", ".", "linalg", ".", "norm", "(", "R", ")", "rinv", "=", "0", "if", "r", "==", "0", "else", "num_zeros", "/", "r", "y1", "=", "max", "(", "0", ",", "1", "-", "rinv", ")", "*", "T", "+", "min", "(", "1", ",", "rinv", ")", "*", "y", "if", "scipy", ".", "spatial", ".", "distance", ".", "euclidean", "(", "y", ",", "y1", ")", "<", "eps", ":", "return", "y1", "y", "=", "y1"], "docstring_tokens": ["Estimate", "the", "geometric", "median", "of", "points", "in", "2D", "."]}
{"code_tokens": ["def", "project", "(", "self", ",", "from_shape", ",", "to_shape", ")", ":", "xy_proj", "=", "project_coords", "(", "[", "(", "self", ".", "x", ",", "self", ".", "y", ")", "]", ",", "from_shape", ",", "to_shape", ")", "return", "self", ".", "deepcopy", "(", "x", "=", "xy_proj", "[", "0", "]", "[", "0", "]", ",", "y", "=", "xy_proj", "[", "0", "]", "[", "1", "]", ")"], "docstring_tokens": ["Project", "the", "keypoint", "onto", "a", "new", "position", "on", "a", "new", "image", "."]}
{"code_tokens": ["def", "shift", "(", "self", ",", "x", "=", "0", ",", "y", "=", "0", ")", ":", "return", "self", ".", "deepcopy", "(", "self", ".", "x", "+", "x", ",", "self", ".", "y", "+", "y", ")"], "docstring_tokens": ["Move", "the", "keypoint", "around", "on", "an", "image", "."]}
{"code_tokens": ["def", "draw_on_image", "(", "self", ",", "image", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "alpha", "=", "1.0", ",", "size", "=", "3", ",", "copy", "=", "True", ",", "raise_if_out_of_image", "=", "False", ")", ":", "if", "copy", ":", "image", "=", "np", ".", "copy", "(", "image", ")", "if", "image", ".", "ndim", "==", "2", ":", "assert", "ia", ".", "is_single_number", "(", "color", ")", ",", "(", "\"Got a 2D image. Expected then 'color' to be a single number, \"", "\"but got %s.\"", "%", "(", "str", "(", "color", ")", ",", ")", ")", "elif", "image", ".", "ndim", "==", "3", "and", "ia", ".", "is_single_number", "(", "color", ")", ":", "color", "=", "[", "color", "]", "*", "image", ".", "shape", "[", "-", "1", "]", "input_dtype", "=", "image", ".", "dtype", "alpha_color", "=", "color", "if", "alpha", "<", "0.01", ":", "# keypoint invisible, nothing to do", "return", "image", "elif", "alpha", ">", "0.99", ":", "alpha", "=", "1", "else", ":", "image", "=", "image", ".", "astype", "(", "np", ".", "float32", ",", "copy", "=", "False", ")", "alpha_color", "=", "alpha", "*", "np", ".", "array", "(", "color", ")", "height", ",", "width", "=", "image", ".", "shape", "[", "0", ":", "2", "]", "y", ",", "x", "=", "self", ".", "y_int", ",", "self", ".", "x_int", "x1", "=", "max", "(", "x", "-", "size", "//", "2", ",", "0", ")", "x2", "=", "min", "(", "x", "+", "1", "+", "size", "//", "2", ",", "width", ")", "y1", "=", "max", "(", "y", "-", "size", "//", "2", ",", "0", ")", "y2", "=", "min", "(", "y", "+", "1", "+", "size", "//", "2", ",", "height", ")", "x1_clipped", ",", "x2_clipped", "=", "np", ".", "clip", "(", "[", "x1", ",", "x2", "]", ",", "0", ",", "width", ")", "y1_clipped", ",", "y2_clipped", "=", "np", ".", "clip", "(", "[", "y1", ",", "y2", "]", ",", "0", ",", "height", ")", "x1_clipped_ooi", "=", "(", "x1_clipped", "<", "0", "or", "x1_clipped", ">=", "width", ")", "x2_clipped_ooi", "=", "(", "x2_clipped", "<", "0", "or", "x2_clipped", ">=", "width", "+", "1", ")", "y1_clipped_ooi", "=", "(", "y1_clipped", "<", "0", "or", "y1_clipped", ">=", "height", ")", "y2_clipped_ooi", "=", "(", "y2_clipped", "<", "0", "or", "y2_clipped", ">=", "height", "+", "1", ")", "x_ooi", "=", "(", "x1_clipped_ooi", "and", "x2_clipped_ooi", ")", "y_ooi", "=", "(", "y1_clipped_ooi", "and", "y2_clipped_ooi", ")", "x_zero_size", "=", "(", "x2_clipped", "-", "x1_clipped", ")", "<", "1", "# min size is 1px", "y_zero_size", "=", "(", "y2_clipped", "-", "y1_clipped", ")", "<", "1", "if", "not", "x_ooi", "and", "not", "y_ooi", "and", "not", "x_zero_size", "and", "not", "y_zero_size", ":", "if", "alpha", "==", "1", ":", "image", "[", "y1_clipped", ":", "y2_clipped", ",", "x1_clipped", ":", "x2_clipped", "]", "=", "color", "else", ":", "image", "[", "y1_clipped", ":", "y2_clipped", ",", "x1_clipped", ":", "x2_clipped", "]", "=", "(", "(", "1", "-", "alpha", ")", "*", "image", "[", "y1_clipped", ":", "y2_clipped", ",", "x1_clipped", ":", "x2_clipped", "]", "+", "alpha_color", ")", "else", ":", "if", "raise_if_out_of_image", ":", "raise", "Exception", "(", "\"Cannot draw keypoint x=%.8f, y=%.8f on image with \"", "\"shape %s.\"", "%", "(", "y", ",", "x", ",", "image", ".", "shape", ")", ")", "if", "image", ".", "dtype", ".", "name", "!=", "input_dtype", ".", "name", ":", "if", "input_dtype", ".", "name", "==", "\"uint8\"", ":", "image", "=", "np", ".", "clip", "(", "image", ",", "0", ",", "255", ",", "out", "=", "image", ")", "image", "=", "image", ".", "astype", "(", "input_dtype", ",", "copy", "=", "False", ")", "return", "image"], "docstring_tokens": ["Draw", "the", "keypoint", "onto", "a", "given", "image", "."]}
{"code_tokens": ["def", "generate_similar_points_manhattan", "(", "self", ",", "nb_steps", ",", "step_size", ",", "return_array", "=", "False", ")", ":", "# TODO add test", "# Points generates in manhattan style with S steps have a shape similar to a 45deg rotated", "# square. The center line with the origin point has S+1+S = 1+2*S points (S to the left,", "# S to the right). The lines above contain (S+1+S)-2 + (S+1+S)-2-2 + ... + 1 points. E.g.", "# for S=2 it would be 3+1=4 and for S=3 it would be 5+3+1=9. Same for the lines below the", "# center. Hence the total number of points is S+1+S + 2*(S^2).", "points", "=", "np", ".", "zeros", "(", "(", "nb_steps", "+", "1", "+", "nb_steps", "+", "2", "*", "(", "nb_steps", "**", "2", ")", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "# we start at the bottom-most line and move towards the top-most line", "yy", "=", "np", ".", "linspace", "(", "self", ".", "y", "-", "nb_steps", "*", "step_size", ",", "self", ".", "y", "+", "nb_steps", "*", "step_size", ",", "nb_steps", "+", "1", "+", "nb_steps", ")", "# bottom-most line contains only one point", "width", "=", "1", "nth_point", "=", "0", "for", "i_y", ",", "y", "in", "enumerate", "(", "yy", ")", ":", "if", "width", "==", "1", ":", "xx", "=", "[", "self", ".", "x", "]", "else", ":", "xx", "=", "np", ".", "linspace", "(", "self", ".", "x", "-", "(", "width", "-", "1", ")", "//", "2", "*", "step_size", ",", "self", ".", "x", "+", "(", "width", "-", "1", ")", "//", "2", "*", "step_size", ",", "width", ")", "for", "x", "in", "xx", ":", "points", "[", "nth_point", "]", "=", "[", "x", ",", "y", "]", "nth_point", "+=", "1", "if", "i_y", "<", "nb_steps", ":", "width", "+=", "2", "else", ":", "width", "-=", "2", "if", "return_array", ":", "return", "points", "return", "[", "self", ".", "deepcopy", "(", "x", "=", "points", "[", "i", ",", "0", "]", ",", "y", "=", "points", "[", "i", ",", "1", "]", ")", "for", "i", "in", "sm", ".", "xrange", "(", "points", ".", "shape", "[", "0", "]", ")", "]"], "docstring_tokens": ["Generate", "nearby", "points", "to", "this", "keypoint", "based", "on", "manhattan", "distance", "."]}
{"code_tokens": ["def", "copy", "(", "self", ",", "x", "=", "None", ",", "y", "=", "None", ")", ":", "return", "self", ".", "deepcopy", "(", "x", "=", "x", ",", "y", "=", "y", ")"], "docstring_tokens": ["Create", "a", "shallow", "copy", "of", "the", "Keypoint", "object", "."]}
{"code_tokens": ["def", "deepcopy", "(", "self", ",", "x", "=", "None", ",", "y", "=", "None", ")", ":", "x", "=", "self", ".", "x", "if", "x", "is", "None", "else", "x", "y", "=", "self", ".", "y", "if", "y", "is", "None", "else", "y", "return", "Keypoint", "(", "x", "=", "x", ",", "y", "=", "y", ")"], "docstring_tokens": ["Create", "a", "deep", "copy", "of", "the", "Keypoint", "object", "."]}
{"code_tokens": ["def", "on", "(", "self", ",", "image", ")", ":", "shape", "=", "normalize_shape", "(", "image", ")", "if", "shape", "[", "0", ":", "2", "]", "==", "self", ".", "shape", "[", "0", ":", "2", "]", ":", "return", "self", ".", "deepcopy", "(", ")", "else", ":", "keypoints", "=", "[", "kp", ".", "project", "(", "self", ".", "shape", ",", "shape", ")", "for", "kp", "in", "self", ".", "keypoints", "]", "return", "self", ".", "deepcopy", "(", "keypoints", ",", "shape", ")"], "docstring_tokens": ["Project", "keypoints", "from", "one", "image", "to", "a", "new", "one", "."]}
{"code_tokens": ["def", "draw_on_image", "(", "self", ",", "image", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "alpha", "=", "1.0", ",", "size", "=", "3", ",", "copy", "=", "True", ",", "raise_if_out_of_image", "=", "False", ")", ":", "image", "=", "np", ".", "copy", "(", "image", ")", "if", "copy", "else", "image", "for", "keypoint", "in", "self", ".", "keypoints", ":", "image", "=", "keypoint", ".", "draw_on_image", "(", "image", ",", "color", "=", "color", ",", "alpha", "=", "alpha", ",", "size", "=", "size", ",", "copy", "=", "False", ",", "raise_if_out_of_image", "=", "raise_if_out_of_image", ")", "return", "image"], "docstring_tokens": ["Draw", "all", "keypoints", "onto", "a", "given", "image", "."]}
{"code_tokens": ["def", "shift", "(", "self", ",", "x", "=", "0", ",", "y", "=", "0", ")", ":", "keypoints", "=", "[", "keypoint", ".", "shift", "(", "x", "=", "x", ",", "y", "=", "y", ")", "for", "keypoint", "in", "self", ".", "keypoints", "]", "return", "self", ".", "deepcopy", "(", "keypoints", ")"], "docstring_tokens": ["Move", "the", "keypoints", "around", "on", "an", "image", "."]}
{"code_tokens": ["def", "copy", "(", "self", ",", "keypoints", "=", "None", ",", "shape", "=", "None", ")", ":", "result", "=", "copy", ".", "copy", "(", "self", ")", "if", "keypoints", "is", "not", "None", ":", "result", ".", "keypoints", "=", "keypoints", "if", "shape", "is", "not", "None", ":", "result", ".", "shape", "=", "shape", "return", "result"], "docstring_tokens": ["Create", "a", "shallow", "copy", "of", "the", "KeypointsOnImage", "object", "."]}
{"code_tokens": ["def", "deepcopy", "(", "self", ",", "keypoints", "=", "None", ",", "shape", "=", "None", ")", ":", "# for some reason deepcopy is way slower here than manual copy", "if", "keypoints", "is", "None", ":", "keypoints", "=", "[", "kp", ".", "deepcopy", "(", ")", "for", "kp", "in", "self", ".", "keypoints", "]", "if", "shape", "is", "None", ":", "shape", "=", "tuple", "(", "self", ".", "shape", ")", "return", "KeypointsOnImage", "(", "keypoints", ",", "shape", ")"], "docstring_tokens": ["Create", "a", "deep", "copy", "of", "the", "KeypointsOnImage", "object", "."]}
{"code_tokens": ["def", "project", "(", "self", ",", "from_shape", ",", "to_shape", ")", ":", "coords_proj", "=", "project_coords", "(", "[", "(", "self", ".", "x1", ",", "self", ".", "y1", ")", ",", "(", "self", ".", "x2", ",", "self", ".", "y2", ")", "]", ",", "from_shape", ",", "to_shape", ")", "return", "self", ".", "copy", "(", "x1", "=", "coords_proj", "[", "0", "]", "[", "0", "]", ",", "y1", "=", "coords_proj", "[", "0", "]", "[", "1", "]", ",", "x2", "=", "coords_proj", "[", "1", "]", "[", "0", "]", ",", "y2", "=", "coords_proj", "[", "1", "]", "[", "1", "]", ",", "label", "=", "self", ".", "label", ")"], "docstring_tokens": ["Project", "the", "bounding", "box", "onto", "a", "differently", "shaped", "image", "."]}
{"code_tokens": ["def", "extend", "(", "self", ",", "all_sides", "=", "0", ",", "top", "=", "0", ",", "right", "=", "0", ",", "bottom", "=", "0", ",", "left", "=", "0", ")", ":", "return", "BoundingBox", "(", "x1", "=", "self", ".", "x1", "-", "all_sides", "-", "left", ",", "x2", "=", "self", ".", "x2", "+", "all_sides", "+", "right", ",", "y1", "=", "self", ".", "y1", "-", "all_sides", "-", "top", ",", "y2", "=", "self", ".", "y2", "+", "all_sides", "+", "bottom", ")"], "docstring_tokens": ["Extend", "the", "size", "of", "the", "bounding", "box", "along", "its", "sides", "."]}
{"code_tokens": ["def", "intersection", "(", "self", ",", "other", ",", "default", "=", "None", ")", ":", "x1_i", "=", "max", "(", "self", ".", "x1", ",", "other", ".", "x1", ")", "y1_i", "=", "max", "(", "self", ".", "y1", ",", "other", ".", "y1", ")", "x2_i", "=", "min", "(", "self", ".", "x2", ",", "other", ".", "x2", ")", "y2_i", "=", "min", "(", "self", ".", "y2", ",", "other", ".", "y2", ")", "if", "x1_i", ">", "x2_i", "or", "y1_i", ">", "y2_i", ":", "return", "default", "else", ":", "return", "BoundingBox", "(", "x1", "=", "x1_i", ",", "y1", "=", "y1_i", ",", "x2", "=", "x2_i", ",", "y2", "=", "y2_i", ")"], "docstring_tokens": ["Compute", "the", "intersection", "bounding", "box", "of", "this", "bounding", "box", "and", "another", "one", "."]}
{"code_tokens": ["def", "union", "(", "self", ",", "other", ")", ":", "return", "BoundingBox", "(", "x1", "=", "min", "(", "self", ".", "x1", ",", "other", ".", "x1", ")", ",", "y1", "=", "min", "(", "self", ".", "y1", ",", "other", ".", "y1", ")", ",", "x2", "=", "max", "(", "self", ".", "x2", ",", "other", ".", "x2", ")", ",", "y2", "=", "max", "(", "self", ".", "y2", ",", "other", ".", "y2", ")", ",", ")"], "docstring_tokens": ["Compute", "the", "union", "bounding", "box", "of", "this", "bounding", "box", "and", "another", "one", "."]}
{"code_tokens": ["def", "iou", "(", "self", ",", "other", ")", ":", "inters", "=", "self", ".", "intersection", "(", "other", ")", "if", "inters", "is", "None", ":", "return", "0.0", "else", ":", "area_union", "=", "self", ".", "area", "+", "other", ".", "area", "-", "inters", ".", "area", "return", "inters", ".", "area", "/", "area_union", "if", "area_union", ">", "0", "else", "0.0"], "docstring_tokens": ["Compute", "the", "IoU", "of", "this", "bounding", "box", "with", "another", "one", "."]}
{"code_tokens": ["def", "is_fully_within_image", "(", "self", ",", "image", ")", ":", "shape", "=", "normalize_shape", "(", "image", ")", "height", ",", "width", "=", "shape", "[", "0", ":", "2", "]", "return", "self", ".", "x1", ">=", "0", "and", "self", ".", "x2", "<", "width", "and", "self", ".", "y1", ">=", "0", "and", "self", ".", "y2", "<", "height"], "docstring_tokens": ["Estimate", "whether", "the", "bounding", "box", "is", "fully", "inside", "the", "image", "area", "."]}
{"code_tokens": ["def", "is_partly_within_image", "(", "self", ",", "image", ")", ":", "shape", "=", "normalize_shape", "(", "image", ")", "height", ",", "width", "=", "shape", "[", "0", ":", "2", "]", "eps", "=", "np", ".", "finfo", "(", "np", ".", "float32", ")", ".", "eps", "img_bb", "=", "BoundingBox", "(", "x1", "=", "0", ",", "x2", "=", "width", "-", "eps", ",", "y1", "=", "0", ",", "y2", "=", "height", "-", "eps", ")", "return", "self", ".", "intersection", "(", "img_bb", ")", "is", "not", "None"], "docstring_tokens": ["Estimate", "whether", "the", "bounding", "box", "is", "at", "least", "partially", "inside", "the", "image", "area", "."]}
{"code_tokens": ["def", "is_out_of_image", "(", "self", ",", "image", ",", "fully", "=", "True", ",", "partly", "=", "False", ")", ":", "if", "self", ".", "is_fully_within_image", "(", "image", ")", ":", "return", "False", "elif", "self", ".", "is_partly_within_image", "(", "image", ")", ":", "return", "partly", "else", ":", "return", "fully"], "docstring_tokens": ["Estimate", "whether", "the", "bounding", "box", "is", "partially", "or", "fully", "outside", "of", "the", "image", "area", "."]}
{"code_tokens": ["def", "clip_out_of_image", "(", "self", ",", "image", ")", ":", "shape", "=", "normalize_shape", "(", "image", ")", "height", ",", "width", "=", "shape", "[", "0", ":", "2", "]", "ia", ".", "do_assert", "(", "height", ">", "0", ")", "ia", ".", "do_assert", "(", "width", ">", "0", ")", "eps", "=", "np", ".", "finfo", "(", "np", ".", "float32", ")", ".", "eps", "x1", "=", "np", ".", "clip", "(", "self", ".", "x1", ",", "0", ",", "width", "-", "eps", ")", "x2", "=", "np", ".", "clip", "(", "self", ".", "x2", ",", "0", ",", "width", "-", "eps", ")", "y1", "=", "np", ".", "clip", "(", "self", ".", "y1", ",", "0", ",", "height", "-", "eps", ")", "y2", "=", "np", ".", "clip", "(", "self", ".", "y2", ",", "0", ",", "height", "-", "eps", ")", "return", "self", ".", "copy", "(", "x1", "=", "x1", ",", "y1", "=", "y1", ",", "x2", "=", "x2", ",", "y2", "=", "y2", ",", "label", "=", "self", ".", "label", ")"], "docstring_tokens": ["Clip", "off", "all", "parts", "of", "the", "bounding", "box", "that", "are", "outside", "of", "the", "image", "."]}
{"code_tokens": ["def", "draw_on_image", "(", "self", ",", "image", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "alpha", "=", "1.0", ",", "size", "=", "1", ",", "copy", "=", "True", ",", "raise_if_out_of_image", "=", "False", ",", "thickness", "=", "None", ")", ":", "if", "thickness", "is", "not", "None", ":", "ia", ".", "warn_deprecated", "(", "\"Usage of argument 'thickness' in BoundingBox.draw_on_image() \"", "\"is deprecated. The argument was renamed to 'size'.\"", ")", "size", "=", "thickness", "if", "raise_if_out_of_image", "and", "self", ".", "is_out_of_image", "(", "image", ")", ":", "raise", "Exception", "(", "\"Cannot draw bounding box x1=%.8f, y1=%.8f, x2=%.8f, y2=%.8f on image with shape %s.\"", "%", "(", "self", ".", "x1", ",", "self", ".", "y1", ",", "self", ".", "x2", ",", "self", ".", "y2", ",", "image", ".", "shape", ")", ")", "result", "=", "np", ".", "copy", "(", "image", ")", "if", "copy", "else", "image", "if", "isinstance", "(", "color", ",", "(", "tuple", ",", "list", ")", ")", ":", "color", "=", "np", ".", "uint8", "(", "color", ")", "for", "i", "in", "range", "(", "size", ")", ":", "y1", ",", "y2", ",", "x1", ",", "x2", "=", "self", ".", "y1_int", ",", "self", ".", "y2_int", ",", "self", ".", "x1_int", ",", "self", ".", "x2_int", "# When y values get into the range (H-0.5, H), the *_int functions round them to H.", "# That is technically sensible, but in the case of drawing means that the border lies", "# just barely outside of the image, making the border disappear, even though the BB", "# is fully inside the image. Here we correct for that because of beauty reasons.", "# Same is the case for x coordinates.", "if", "self", ".", "is_fully_within_image", "(", "image", ")", ":", "y1", "=", "np", ".", "clip", "(", "y1", ",", "0", ",", "image", ".", "shape", "[", "0", "]", "-", "1", ")", "y2", "=", "np", ".", "clip", "(", "y2", ",", "0", ",", "image", ".", "shape", "[", "0", "]", "-", "1", ")", "x1", "=", "np", ".", "clip", "(", "x1", ",", "0", ",", "image", ".", "shape", "[", "1", "]", "-", "1", ")", "x2", "=", "np", ".", "clip", "(", "x2", ",", "0", ",", "image", ".", "shape", "[", "1", "]", "-", "1", ")", "y", "=", "[", "y1", "-", "i", ",", "y1", "-", "i", ",", "y2", "+", "i", ",", "y2", "+", "i", "]", "x", "=", "[", "x1", "-", "i", ",", "x2", "+", "i", ",", "x2", "+", "i", ",", "x1", "-", "i", "]", "rr", ",", "cc", "=", "skimage", ".", "draw", ".", "polygon_perimeter", "(", "y", ",", "x", ",", "shape", "=", "result", ".", "shape", ")", "if", "alpha", ">=", "0.99", ":", "result", "[", "rr", ",", "cc", ",", ":", "]", "=", "color", "else", ":", "if", "ia", ".", "is_float_array", "(", "result", ")", ":", "result", "[", "rr", ",", "cc", ",", ":", "]", "=", "(", "1", "-", "alpha", ")", "*", "result", "[", "rr", ",", "cc", ",", ":", "]", "+", "alpha", "*", "color", "result", "=", "np", ".", "clip", "(", "result", ",", "0", ",", "255", ")", "else", ":", "input_dtype", "=", "result", ".", "dtype", "result", "=", "result", ".", "astype", "(", "np", ".", "float32", ")", "result", "[", "rr", ",", "cc", ",", ":", "]", "=", "(", "1", "-", "alpha", ")", "*", "result", "[", "rr", ",", "cc", ",", ":", "]", "+", "alpha", "*", "color", "result", "=", "np", ".", "clip", "(", "result", ",", "0", ",", "255", ")", ".", "astype", "(", "input_dtype", ")", "return", "result"], "docstring_tokens": ["Draw", "the", "bounding", "box", "on", "an", "image", "."]}
{"code_tokens": ["def", "extract_from_image", "(", "self", ",", "image", ",", "pad", "=", "True", ",", "pad_max", "=", "None", ",", "prevent_zero_size", "=", "True", ")", ":", "pad_top", "=", "0", "pad_right", "=", "0", "pad_bottom", "=", "0", "pad_left", "=", "0", "height", ",", "width", "=", "image", ".", "shape", "[", "0", "]", ",", "image", ".", "shape", "[", "1", "]", "x1", ",", "x2", ",", "y1", ",", "y2", "=", "self", ".", "x1_int", ",", "self", ".", "x2_int", ",", "self", ".", "y1_int", ",", "self", ".", "y2_int", "# When y values get into the range (H-0.5, H), the *_int functions round them to H.", "# That is technically sensible, but in the case of extraction leads to a black border,", "# which is both ugly and unexpected after calling cut_out_of_image(). Here we correct for", "# that because of beauty reasons.", "# Same is the case for x coordinates.", "fully_within", "=", "self", ".", "is_fully_within_image", "(", "image", ")", "if", "fully_within", ":", "y1", ",", "y2", "=", "np", ".", "clip", "(", "[", "y1", ",", "y2", "]", ",", "0", ",", "height", "-", "1", ")", "x1", ",", "x2", "=", "np", ".", "clip", "(", "[", "x1", ",", "x2", "]", ",", "0", ",", "width", "-", "1", ")", "# TODO add test", "if", "prevent_zero_size", ":", "if", "abs", "(", "x2", "-", "x1", ")", "<", "1", ":", "x2", "=", "x1", "+", "1", "if", "abs", "(", "y2", "-", "y1", ")", "<", "1", ":", "y2", "=", "y1", "+", "1", "if", "pad", ":", "# if the bb is outside of the image area, the following pads the image", "# first with black pixels until the bb is inside the image", "# and only then extracts the image area", "# TODO probably more efficient to initialize an array of zeros", "# and copy only the portions of the bb into that array that are", "# natively inside the image area", "if", "x1", "<", "0", ":", "pad_left", "=", "abs", "(", "x1", ")", "x2", "=", "x2", "+", "pad_left", "width", "=", "width", "+", "pad_left", "x1", "=", "0", "if", "y1", "<", "0", ":", "pad_top", "=", "abs", "(", "y1", ")", "y2", "=", "y2", "+", "pad_top", "height", "=", "height", "+", "pad_top", "y1", "=", "0", "if", "x2", ">=", "width", ":", "pad_right", "=", "x2", "-", "width", "if", "y2", ">=", "height", ":", "pad_bottom", "=", "y2", "-", "height", "paddings", "=", "[", "pad_top", ",", "pad_right", ",", "pad_bottom", ",", "pad_left", "]", "any_padded", "=", "any", "(", "[", "val", ">", "0", "for", "val", "in", "paddings", "]", ")", "if", "any_padded", ":", "if", "pad_max", "is", "None", ":", "pad_max", "=", "max", "(", "paddings", ")", "image", "=", "ia", ".", "pad", "(", "image", ",", "top", "=", "min", "(", "pad_top", ",", "pad_max", ")", ",", "right", "=", "min", "(", "pad_right", ",", "pad_max", ")", ",", "bottom", "=", "min", "(", "pad_bottom", ",", "pad_max", ")", ",", "left", "=", "min", "(", "pad_left", ",", "pad_max", ")", ")", "return", "image", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "else", ":", "within_image", "=", "(", "(", "0", ",", "0", ",", "0", ",", "0", ")", "<=", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", "<", "(", "width", ",", "height", ",", "width", ",", "height", ")", ")", "out_height", ",", "out_width", "=", "(", "y2", "-", "y1", ")", ",", "(", "x2", "-", "x1", ")", "nonzero_height", "=", "(", "out_height", ">", "0", ")", "nonzero_width", "=", "(", "out_width", ">", "0", ")", "if", "within_image", "and", "nonzero_height", "and", "nonzero_width", ":", "return", "image", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "if", "prevent_zero_size", ":", "out_height", "=", "1", "out_width", "=", "1", "else", ":", "out_height", "=", "0", "out_width", "=", "0", "if", "image", ".", "ndim", "==", "2", ":", "return", "np", ".", "zeros", "(", "(", "out_height", ",", "out_width", ")", ",", "dtype", "=", "image", ".", "dtype", ")", "return", "np", ".", "zeros", "(", "(", "out_height", ",", "out_width", ",", "image", ".", "shape", "[", "-", "1", "]", ")", ",", "dtype", "=", "image", ".", "dtype", ")"], "docstring_tokens": ["Extract", "the", "image", "pixels", "within", "the", "bounding", "box", "."]}
{"code_tokens": ["def", "copy", "(", "self", ",", "x1", "=", "None", ",", "y1", "=", "None", ",", "x2", "=", "None", ",", "y2", "=", "None", ",", "label", "=", "None", ")", ":", "return", "BoundingBox", "(", "x1", "=", "self", ".", "x1", "if", "x1", "is", "None", "else", "x1", ",", "x2", "=", "self", ".", "x2", "if", "x2", "is", "None", "else", "x2", ",", "y1", "=", "self", ".", "y1", "if", "y1", "is", "None", "else", "y1", ",", "y2", "=", "self", ".", "y2", "if", "y2", "is", "None", "else", "y2", ",", "label", "=", "self", ".", "label", "if", "label", "is", "None", "else", "label", ")"], "docstring_tokens": ["Create", "a", "shallow", "copy", "of", "the", "BoundingBox", "object", "."]}
{"code_tokens": ["def", "draw_on_image", "(", "self", ",", "image", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "alpha", "=", "1.0", ",", "size", "=", "1", ",", "copy", "=", "True", ",", "raise_if_out_of_image", "=", "False", ",", "thickness", "=", "None", ")", ":", "image", "=", "np", ".", "copy", "(", "image", ")", "if", "copy", "else", "image", "for", "bb", "in", "self", ".", "bounding_boxes", ":", "image", "=", "bb", ".", "draw_on_image", "(", "image", ",", "color", "=", "color", ",", "alpha", "=", "alpha", ",", "size", "=", "size", ",", "copy", "=", "False", ",", "raise_if_out_of_image", "=", "raise_if_out_of_image", ",", "thickness", "=", "thickness", ")", "return", "image"], "docstring_tokens": ["Draw", "all", "bounding", "boxes", "onto", "a", "given", "image", "."]}
{"code_tokens": ["def", "remove_out_of_image", "(", "self", ",", "fully", "=", "True", ",", "partly", "=", "False", ")", ":", "bbs_clean", "=", "[", "bb", "for", "bb", "in", "self", ".", "bounding_boxes", "if", "not", "bb", ".", "is_out_of_image", "(", "self", ".", "shape", ",", "fully", "=", "fully", ",", "partly", "=", "partly", ")", "]", "return", "BoundingBoxesOnImage", "(", "bbs_clean", ",", "shape", "=", "self", ".", "shape", ")"], "docstring_tokens": ["Remove", "all", "bounding", "boxes", "that", "are", "fully", "or", "partially", "outside", "of", "the", "image", "."]}
{"code_tokens": ["def", "clip_out_of_image", "(", "self", ")", ":", "bbs_cut", "=", "[", "bb", ".", "clip_out_of_image", "(", "self", ".", "shape", ")", "for", "bb", "in", "self", ".", "bounding_boxes", "if", "bb", ".", "is_partly_within_image", "(", "self", ".", "shape", ")", "]", "return", "BoundingBoxesOnImage", "(", "bbs_cut", ",", "shape", "=", "self", ".", "shape", ")"], "docstring_tokens": ["Clip", "off", "all", "parts", "from", "all", "bounding", "boxes", "that", "are", "outside", "of", "the", "image", "."]}
{"code_tokens": ["def", "deepcopy", "(", "self", ")", ":", "# Manual copy is far faster than deepcopy for BoundingBoxesOnImage,", "# so use manual copy here too", "bbs", "=", "[", "bb", ".", "deepcopy", "(", ")", "for", "bb", "in", "self", ".", "bounding_boxes", "]", "return", "BoundingBoxesOnImage", "(", "bbs", ",", "tuple", "(", "self", ".", "shape", ")", ")"], "docstring_tokens": ["Create", "a", "deep", "copy", "of", "the", "BoundingBoxesOnImage", "object", "."]}
{"code_tokens": ["def", "Emboss", "(", "alpha", "=", "0", ",", "strength", "=", "1", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "alpha_param", "=", "iap", ".", "handle_continuous_param", "(", "alpha", ",", "\"alpha\"", ",", "value_range", "=", "(", "0", ",", "1.0", ")", ",", "tuple_to_uniform", "=", "True", ",", "list_to_choice", "=", "True", ")", "strength_param", "=", "iap", ".", "handle_continuous_param", "(", "strength", ",", "\"strength\"", ",", "value_range", "=", "(", "0", ",", "None", ")", ",", "tuple_to_uniform", "=", "True", ",", "list_to_choice", "=", "True", ")", "def", "create_matrices", "(", "image", ",", "nb_channels", ",", "random_state_func", ")", ":", "alpha_sample", "=", "alpha_param", ".", "draw_sample", "(", "random_state", "=", "random_state_func", ")", "ia", ".", "do_assert", "(", "0", "<=", "alpha_sample", "<=", "1.0", ")", "strength_sample", "=", "strength_param", ".", "draw_sample", "(", "random_state", "=", "random_state_func", ")", "matrix_nochange", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "matrix_effect", "=", "np", ".", "array", "(", "[", "[", "-", "1", "-", "strength_sample", ",", "0", "-", "strength_sample", ",", "0", "]", ",", "[", "0", "-", "strength_sample", ",", "1", ",", "0", "+", "strength_sample", "]", ",", "[", "0", ",", "0", "+", "strength_sample", ",", "1", "+", "strength_sample", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "matrix", "=", "(", "1", "-", "alpha_sample", ")", "*", "matrix_nochange", "+", "alpha_sample", "*", "matrix_effect", "return", "[", "matrix", "]", "*", "nb_channels", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "Convolve", "(", "create_matrices", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Augmenter", "that", "embosses", "images", "and", "overlays", "the", "result", "with", "the", "original", "image", "."]}
{"code_tokens": ["def", "EdgeDetect", "(", "alpha", "=", "0", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "alpha_param", "=", "iap", ".", "handle_continuous_param", "(", "alpha", ",", "\"alpha\"", ",", "value_range", "=", "(", "0", ",", "1.0", ")", ",", "tuple_to_uniform", "=", "True", ",", "list_to_choice", "=", "True", ")", "def", "create_matrices", "(", "_image", ",", "nb_channels", ",", "random_state_func", ")", ":", "alpha_sample", "=", "alpha_param", ".", "draw_sample", "(", "random_state", "=", "random_state_func", ")", "ia", ".", "do_assert", "(", "0", "<=", "alpha_sample", "<=", "1.0", ")", "matrix_nochange", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "matrix_effect", "=", "np", ".", "array", "(", "[", "[", "0", ",", "1", ",", "0", "]", ",", "[", "1", ",", "-", "4", ",", "1", "]", ",", "[", "0", ",", "1", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "matrix", "=", "(", "1", "-", "alpha_sample", ")", "*", "matrix_nochange", "+", "alpha_sample", "*", "matrix_effect", "return", "[", "matrix", "]", "*", "nb_channels", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "Convolve", "(", "create_matrices", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Augmenter", "that", "detects", "all", "edges", "in", "images", "marks", "them", "in", "a", "black", "and", "white", "image", "and", "then", "overlays", "the", "result", "with", "the", "original", "image", "."]}
{"code_tokens": ["def", "DirectedEdgeDetect", "(", "alpha", "=", "0", ",", "direction", "=", "(", "0.0", ",", "1.0", ")", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "alpha_param", "=", "iap", ".", "handle_continuous_param", "(", "alpha", ",", "\"alpha\"", ",", "value_range", "=", "(", "0", ",", "1.0", ")", ",", "tuple_to_uniform", "=", "True", ",", "list_to_choice", "=", "True", ")", "direction_param", "=", "iap", ".", "handle_continuous_param", "(", "direction", ",", "\"direction\"", ",", "value_range", "=", "None", ",", "tuple_to_uniform", "=", "True", ",", "list_to_choice", "=", "True", ")", "def", "create_matrices", "(", "_image", ",", "nb_channels", ",", "random_state_func", ")", ":", "alpha_sample", "=", "alpha_param", ".", "draw_sample", "(", "random_state", "=", "random_state_func", ")", "ia", ".", "do_assert", "(", "0", "<=", "alpha_sample", "<=", "1.0", ")", "direction_sample", "=", "direction_param", ".", "draw_sample", "(", "random_state", "=", "random_state_func", ")", "deg", "=", "int", "(", "direction_sample", "*", "360", ")", "%", "360", "rad", "=", "np", ".", "deg2rad", "(", "deg", ")", "x", "=", "np", ".", "cos", "(", "rad", "-", "0.5", "*", "np", ".", "pi", ")", "y", "=", "np", ".", "sin", "(", "rad", "-", "0.5", "*", "np", ".", "pi", ")", "direction_vector", "=", "np", ".", "array", "(", "[", "x", ",", "y", "]", ")", "matrix_effect", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "for", "x", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "for", "y", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "if", "(", "x", ",", "y", ")", "!=", "(", "0", ",", "0", ")", ":", "cell_vector", "=", "np", ".", "array", "(", "[", "x", ",", "y", "]", ")", "distance_deg", "=", "np", ".", "rad2deg", "(", "ia", ".", "angle_between_vectors", "(", "cell_vector", ",", "direction_vector", ")", ")", "distance", "=", "distance_deg", "/", "180", "similarity", "=", "(", "1", "-", "distance", ")", "**", "4", "matrix_effect", "[", "y", "+", "1", ",", "x", "+", "1", "]", "=", "similarity", "matrix_effect", "=", "matrix_effect", "/", "np", ".", "sum", "(", "matrix_effect", ")", "matrix_effect", "=", "matrix_effect", "*", "(", "-", "1", ")", "matrix_effect", "[", "1", ",", "1", "]", "=", "1", "matrix_nochange", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "matrix", "=", "(", "1", "-", "alpha_sample", ")", "*", "matrix_nochange", "+", "alpha_sample", "*", "matrix_effect", "return", "[", "matrix", "]", "*", "nb_channels", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "Convolve", "(", "create_matrices", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Augmenter", "that", "detects", "edges", "that", "have", "certain", "directions", "and", "marks", "them", "in", "a", "black", "and", "white", "image", "and", "then", "overlays", "the", "result", "with", "the", "original", "image", "."]}
{"code_tokens": ["def", "normalize_shape", "(", "shape", ")", ":", "if", "isinstance", "(", "shape", ",", "tuple", ")", ":", "return", "shape", "assert", "ia", ".", "is_np_array", "(", "shape", ")", ",", "(", "\"Expected tuple of ints or array, got %s.\"", "%", "(", "type", "(", "shape", ")", ",", ")", ")", "return", "shape", ".", "shape"], "docstring_tokens": ["Normalize", "a", "shape", "tuple", "or", "array", "to", "a", "shape", "tuple", "."]}
{"code_tokens": ["def", "project_coords", "(", "coords", ",", "from_shape", ",", "to_shape", ")", ":", "from_shape", "=", "normalize_shape", "(", "from_shape", ")", "to_shape", "=", "normalize_shape", "(", "to_shape", ")", "if", "from_shape", "[", "0", ":", "2", "]", "==", "to_shape", "[", "0", ":", "2", "]", ":", "return", "coords", "from_height", ",", "from_width", "=", "from_shape", "[", "0", ":", "2", "]", "to_height", ",", "to_width", "=", "to_shape", "[", "0", ":", "2", "]", "assert", "all", "(", "[", "v", ">", "0", "for", "v", "in", "[", "from_height", ",", "from_width", ",", "to_height", ",", "to_width", "]", "]", ")", "# make sure to not just call np.float32(coords) here as the following lines", "# perform in-place changes and np.float32(.) only copies if the input", "# was *not* a float32 array", "coords_proj", "=", "np", ".", "array", "(", "coords", ")", ".", "astype", "(", "np", ".", "float32", ")", "coords_proj", "[", ":", ",", "0", "]", "=", "(", "coords_proj", "[", ":", ",", "0", "]", "/", "from_width", ")", "*", "to_width", "coords_proj", "[", ":", ",", "1", "]", "=", "(", "coords_proj", "[", ":", ",", "1", "]", "/", "from_height", ")", "*", "to_height", "return", "coords_proj"], "docstring_tokens": ["Project", "coordinates", "from", "one", "image", "shape", "to", "another", "."]}
{"code_tokens": ["def", "AdditivePoissonNoise", "(", "lam", "=", "0", ",", "per_channel", "=", "False", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "lam2", "=", "iap", ".", "handle_continuous_param", "(", "lam", ",", "\"lam\"", ",", "value_range", "=", "(", "0", ",", "None", ")", ",", "tuple_to_uniform", "=", "True", ",", "list_to_choice", "=", "True", ")", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "AddElementwise", "(", "iap", ".", "RandomSign", "(", "iap", ".", "Poisson", "(", "lam", "=", "lam2", ")", ")", ",", "per_channel", "=", "per_channel", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Create", "an", "augmenter", "to", "add", "poisson", "noise", "to", "images", "."]}
{"code_tokens": ["def", "Dropout", "(", "p", "=", "0", ",", "per_channel", "=", "False", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "if", "ia", ".", "is_single_number", "(", "p", ")", ":", "p2", "=", "iap", ".", "Binomial", "(", "1", "-", "p", ")", "elif", "ia", ".", "is_iterable", "(", "p", ")", ":", "ia", ".", "do_assert", "(", "len", "(", "p", ")", "==", "2", ")", "ia", ".", "do_assert", "(", "p", "[", "0", "]", "<", "p", "[", "1", "]", ")", "ia", ".", "do_assert", "(", "0", "<=", "p", "[", "0", "]", "<=", "1.0", ")", "ia", ".", "do_assert", "(", "0", "<=", "p", "[", "1", "]", "<=", "1.0", ")", "p2", "=", "iap", ".", "Binomial", "(", "iap", ".", "Uniform", "(", "1", "-", "p", "[", "1", "]", ",", "1", "-", "p", "[", "0", "]", ")", ")", "elif", "isinstance", "(", "p", ",", "iap", ".", "StochasticParameter", ")", ":", "p2", "=", "p", "else", ":", "raise", "Exception", "(", "\"Expected p to be float or int or StochasticParameter, got %s.\"", "%", "(", "type", "(", "p", ")", ",", ")", ")", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "MultiplyElementwise", "(", "p2", ",", "per_channel", "=", "per_channel", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Augmenter", "that", "sets", "a", "certain", "fraction", "of", "pixels", "in", "images", "to", "zero", "."]}
{"code_tokens": ["def", "CoarseDropout", "(", "p", "=", "0", ",", "size_px", "=", "None", ",", "size_percent", "=", "None", ",", "per_channel", "=", "False", ",", "min_size", "=", "4", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "if", "ia", ".", "is_single_number", "(", "p", ")", ":", "p2", "=", "iap", ".", "Binomial", "(", "1", "-", "p", ")", "elif", "ia", ".", "is_iterable", "(", "p", ")", ":", "ia", ".", "do_assert", "(", "len", "(", "p", ")", "==", "2", ")", "ia", ".", "do_assert", "(", "p", "[", "0", "]", "<", "p", "[", "1", "]", ")", "ia", ".", "do_assert", "(", "0", "<=", "p", "[", "0", "]", "<=", "1.0", ")", "ia", ".", "do_assert", "(", "0", "<=", "p", "[", "1", "]", "<=", "1.0", ")", "p2", "=", "iap", ".", "Binomial", "(", "iap", ".", "Uniform", "(", "1", "-", "p", "[", "1", "]", ",", "1", "-", "p", "[", "0", "]", ")", ")", "elif", "isinstance", "(", "p", ",", "iap", ".", "StochasticParameter", ")", ":", "p2", "=", "p", "else", ":", "raise", "Exception", "(", "\"Expected p to be float or int or StochasticParameter, got %s.\"", "%", "(", "type", "(", "p", ")", ",", ")", ")", "if", "size_px", "is", "not", "None", ":", "p3", "=", "iap", ".", "FromLowerResolution", "(", "other_param", "=", "p2", ",", "size_px", "=", "size_px", ",", "min_size", "=", "min_size", ")", "elif", "size_percent", "is", "not", "None", ":", "p3", "=", "iap", ".", "FromLowerResolution", "(", "other_param", "=", "p2", ",", "size_percent", "=", "size_percent", ",", "min_size", "=", "min_size", ")", "else", ":", "raise", "Exception", "(", "\"Either size_px or size_percent must be set.\"", ")", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "MultiplyElementwise", "(", "p3", ",", "per_channel", "=", "per_channel", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Augmenter", "that", "sets", "rectangular", "areas", "within", "images", "to", "zero", "."]}
{"code_tokens": ["def", "ImpulseNoise", "(", "p", "=", "0", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "return", "SaltAndPepper", "(", "p", "=", "p", ",", "per_channel", "=", "True", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Creates", "an", "augmenter", "to", "apply", "impulse", "noise", "to", "an", "image", "."]}
{"code_tokens": ["def", "SaltAndPepper", "(", "p", "=", "0", ",", "per_channel", "=", "False", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "ReplaceElementwise", "(", "mask", "=", "p", ",", "replacement", "=", "iap", ".", "Beta", "(", "0.5", ",", "0.5", ")", "*", "255", ",", "per_channel", "=", "per_channel", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Adds", "salt", "and", "pepper", "noise", "to", "an", "image", "i", ".", "e", ".", "some", "white", "-", "ish", "and", "black", "-", "ish", "pixels", "."]}
{"code_tokens": ["def", "Pepper", "(", "p", "=", "0", ",", "per_channel", "=", "False", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "replacement01", "=", "iap", ".", "ForceSign", "(", "iap", ".", "Beta", "(", "0.5", ",", "0.5", ")", "-", "0.5", ",", "positive", "=", "False", ",", "mode", "=", "\"invert\"", ")", "+", "0.5", "replacement", "=", "replacement01", "*", "255", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "ReplaceElementwise", "(", "mask", "=", "p", ",", "replacement", "=", "replacement", ",", "per_channel", "=", "per_channel", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Adds", "pepper", "noise", "to", "an", "image", "i", ".", "e", ".", "black", "-", "ish", "pixels", "."]}
{"code_tokens": ["def", "CoarsePepper", "(", "p", "=", "0", ",", "size_px", "=", "None", ",", "size_percent", "=", "None", ",", "per_channel", "=", "False", ",", "min_size", "=", "4", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "mask", "=", "iap", ".", "handle_probability_param", "(", "p", ",", "\"p\"", ",", "tuple_to_uniform", "=", "True", ",", "list_to_choice", "=", "True", ")", "if", "size_px", "is", "not", "None", ":", "mask_low", "=", "iap", ".", "FromLowerResolution", "(", "other_param", "=", "mask", ",", "size_px", "=", "size_px", ",", "min_size", "=", "min_size", ")", "elif", "size_percent", "is", "not", "None", ":", "mask_low", "=", "iap", ".", "FromLowerResolution", "(", "other_param", "=", "mask", ",", "size_percent", "=", "size_percent", ",", "min_size", "=", "min_size", ")", "else", ":", "raise", "Exception", "(", "\"Either size_px or size_percent must be set.\"", ")", "replacement01", "=", "iap", ".", "ForceSign", "(", "iap", ".", "Beta", "(", "0.5", ",", "0.5", ")", "-", "0.5", ",", "positive", "=", "False", ",", "mode", "=", "\"invert\"", ")", "+", "0.5", "replacement", "=", "replacement01", "*", "255", "if", "name", "is", "None", ":", "name", "=", "\"Unnamed%s\"", "%", "(", "ia", ".", "caller_name", "(", ")", ",", ")", "return", "ReplaceElementwise", "(", "mask", "=", "mask_low", ",", "replacement", "=", "replacement", ",", "per_channel", "=", "per_channel", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Adds", "coarse", "pepper", "noise", "to", "an", "image", "i", ".", "e", ".", "rectangles", "that", "contain", "noisy", "black", "-", "ish", "pixels", "."]}
{"code_tokens": ["def", "ContrastNormalization", "(", "alpha", "=", "1.0", ",", "per_channel", "=", "False", ",", "name", "=", "None", ",", "deterministic", "=", "False", ",", "random_state", "=", "None", ")", ":", "# placed here to avoid cyclic dependency", "from", ".", "import", "contrast", "as", "contrast_lib", "return", "contrast_lib", ".", "LinearContrast", "(", "alpha", "=", "alpha", ",", "per_channel", "=", "per_channel", ",", "name", "=", "name", ",", "deterministic", "=", "deterministic", ",", "random_state", "=", "random_state", ")"], "docstring_tokens": ["Augmenter", "that", "changes", "the", "contrast", "of", "images", "."]}
{"code_tokens": ["def", "is_single_float", "(", "val", ")", ":", "return", "isinstance", "(", "val", ",", "numbers", ".", "Real", ")", "and", "not", "is_single_integer", "(", "val", ")", "and", "not", "isinstance", "(", "val", ",", "bool", ")"], "docstring_tokens": ["Checks", "whether", "a", "variable", "is", "a", "float", "."]}
{"code_tokens": ["def", "is_integer_array", "(", "val", ")", ":", "return", "is_np_array", "(", "val", ")", "and", "issubclass", "(", "val", ".", "dtype", ".", "type", ",", "np", ".", "integer", ")"], "docstring_tokens": ["Checks", "whether", "a", "variable", "is", "a", "numpy", "integer", "array", "."]}
{"code_tokens": ["def", "is_float_array", "(", "val", ")", ":", "return", "is_np_array", "(", "val", ")", "and", "issubclass", "(", "val", ".", "dtype", ".", "type", ",", "np", ".", "floating", ")"], "docstring_tokens": ["Checks", "whether", "a", "variable", "is", "a", "numpy", "float", "array", "."]}
{"code_tokens": ["def", "new_random_state", "(", "seed", "=", "None", ",", "fully_random", "=", "False", ")", ":", "if", "seed", "is", "None", ":", "if", "not", "fully_random", ":", "# sample manually a seed instead of just RandomState(),", "# because the latter one", "# is way slower.", "seed", "=", "CURRENT_RANDOM_STATE", ".", "randint", "(", "SEED_MIN_VALUE", ",", "SEED_MAX_VALUE", ",", "1", ")", "[", "0", "]", "return", "np", ".", "random", ".", "RandomState", "(", "seed", ")"], "docstring_tokens": ["Returns", "a", "new", "random", "state", "."]}
{"code_tokens": ["def", "copy_random_state", "(", "random_state", ",", "force_copy", "=", "False", ")", ":", "if", "random_state", "==", "np", ".", "random", "and", "not", "force_copy", ":", "return", "random_state", "else", ":", "rs_copy", "=", "dummy_random_state", "(", ")", "orig_state", "=", "random_state", ".", "get_state", "(", ")", "rs_copy", ".", "set_state", "(", "orig_state", ")", "return", "rs_copy"], "docstring_tokens": ["Creates", "a", "copy", "of", "a", "random", "state", "."]}
{"code_tokens": ["def", "derive_random_states", "(", "random_state", ",", "n", "=", "1", ")", ":", "seed_", "=", "random_state", ".", "randint", "(", "SEED_MIN_VALUE", ",", "SEED_MAX_VALUE", ",", "1", ")", "[", "0", "]", "return", "[", "new_random_state", "(", "seed_", "+", "i", ")", "for", "i", "in", "sm", ".", "xrange", "(", "n", ")", "]"], "docstring_tokens": ["Create", "N", "new", "random", "states", "based", "on", "an", "existing", "random", "state", "or", "seed", "."]}
{"code_tokens": ["def", "_quokka_normalize_extract", "(", "extract", ")", ":", "# TODO get rid of this deferred import", "from", "imgaug", ".", "augmentables", ".", "bbs", "import", "BoundingBox", ",", "BoundingBoxesOnImage", "if", "extract", "==", "\"square\"", ":", "bb", "=", "BoundingBox", "(", "x1", "=", "0", ",", "y1", "=", "0", ",", "x2", "=", "643", ",", "y2", "=", "643", ")", "elif", "isinstance", "(", "extract", ",", "tuple", ")", "and", "len", "(", "extract", ")", "==", "4", ":", "bb", "=", "BoundingBox", "(", "x1", "=", "extract", "[", "0", "]", ",", "y1", "=", "extract", "[", "1", "]", ",", "x2", "=", "extract", "[", "2", "]", ",", "y2", "=", "extract", "[", "3", "]", ")", "elif", "isinstance", "(", "extract", ",", "BoundingBox", ")", ":", "bb", "=", "extract", "elif", "isinstance", "(", "extract", ",", "BoundingBoxesOnImage", ")", ":", "do_assert", "(", "len", "(", "extract", ".", "bounding_boxes", ")", "==", "1", ")", "do_assert", "(", "extract", ".", "shape", "[", "0", ":", "2", "]", "==", "(", "643", ",", "960", ")", ")", "bb", "=", "extract", ".", "bounding_boxes", "[", "0", "]", "else", ":", "raise", "Exception", "(", "\"Expected 'square' or tuple of four entries or BoundingBox or BoundingBoxesOnImage \"", "+", "\"for parameter 'extract', got %s.\"", "%", "(", "type", "(", "extract", ")", ",", ")", ")", "return", "bb"], "docstring_tokens": ["Generate", "a", "normalized", "rectangle", "to", "be", "extract", "from", "the", "standard", "quokka", "image", "."]}
{"code_tokens": ["def", "_compute_resized_shape", "(", "from_shape", ",", "to_shape", ")", ":", "if", "is_np_array", "(", "from_shape", ")", ":", "from_shape", "=", "from_shape", ".", "shape", "if", "is_np_array", "(", "to_shape", ")", ":", "to_shape", "=", "to_shape", ".", "shape", "to_shape_computed", "=", "list", "(", "from_shape", ")", "if", "to_shape", "is", "None", ":", "pass", "elif", "isinstance", "(", "to_shape", ",", "tuple", ")", ":", "do_assert", "(", "len", "(", "from_shape", ")", "in", "[", "2", ",", "3", "]", ")", "do_assert", "(", "len", "(", "to_shape", ")", "in", "[", "2", ",", "3", "]", ")", "if", "len", "(", "from_shape", ")", "==", "3", "and", "len", "(", "to_shape", ")", "==", "3", ":", "do_assert", "(", "from_shape", "[", "2", "]", "==", "to_shape", "[", "2", "]", ")", "elif", "len", "(", "to_shape", ")", "==", "3", ":", "to_shape_computed", ".", "append", "(", "to_shape", "[", "2", "]", ")", "do_assert", "(", "all", "(", "[", "v", "is", "None", "or", "is_single_number", "(", "v", ")", "for", "v", "in", "to_shape", "[", "0", ":", "2", "]", "]", ")", ",", "\"Expected the first two entries in to_shape to be None or numbers, \"", "+", "\"got types %s.\"", "%", "(", "str", "(", "[", "type", "(", "v", ")", "for", "v", "in", "to_shape", "[", "0", ":", "2", "]", "]", ")", ",", ")", ")", "for", "i", ",", "from_shape_i", "in", "enumerate", "(", "from_shape", "[", "0", ":", "2", "]", ")", ":", "if", "to_shape", "[", "i", "]", "is", "None", ":", "to_shape_computed", "[", "i", "]", "=", "from_shape_i", "elif", "is_single_integer", "(", "to_shape", "[", "i", "]", ")", ":", "to_shape_computed", "[", "i", "]", "=", "to_shape", "[", "i", "]", "else", ":", "# float", "to_shape_computed", "[", "i", "]", "=", "int", "(", "np", ".", "round", "(", "from_shape_i", "*", "to_shape", "[", "i", "]", ")", ")", "elif", "is_single_integer", "(", "to_shape", ")", "or", "is_single_float", "(", "to_shape", ")", ":", "to_shape_computed", "=", "_compute_resized_shape", "(", "from_shape", ",", "(", "to_shape", ",", "to_shape", ")", ")", "else", ":", "raise", "Exception", "(", "\"Expected to_shape to be None or ndarray or tuple of floats or tuple of ints or single int \"", "+", "\"or single float, got %s.\"", "%", "(", "type", "(", "to_shape", ")", ",", ")", ")", "return", "tuple", "(", "to_shape_computed", ")"], "docstring_tokens": ["Computes", "the", "intended", "new", "shape", "of", "an", "image", "-", "like", "array", "after", "resizing", "."]}
{"code_tokens": ["def", "quokka", "(", "size", "=", "None", ",", "extract", "=", "None", ")", ":", "img", "=", "imageio", ".", "imread", "(", "QUOKKA_FP", ",", "pilmode", "=", "\"RGB\"", ")", "if", "extract", "is", "not", "None", ":", "bb", "=", "_quokka_normalize_extract", "(", "extract", ")", "img", "=", "bb", ".", "extract_from_image", "(", "img", ")", "if", "size", "is", "not", "None", ":", "shape_resized", "=", "_compute_resized_shape", "(", "img", ".", "shape", ",", "size", ")", "img", "=", "imresize_single_image", "(", "img", ",", "shape_resized", "[", "0", ":", "2", "]", ")", "return", "img"], "docstring_tokens": ["Returns", "an", "image", "of", "a", "quokka", "as", "a", "numpy", "array", "."]}
{"code_tokens": ["def", "quokka_segmentation_map", "(", "size", "=", "None", ",", "extract", "=", "None", ")", ":", "# TODO get rid of this deferred import", "from", "imgaug", ".", "augmentables", ".", "segmaps", "import", "SegmentationMapOnImage", "with", "open", "(", "QUOKKA_ANNOTATIONS_FP", ",", "\"r\"", ")", "as", "f", ":", "json_dict", "=", "json", ".", "load", "(", "f", ")", "xx", "=", "[", "]", "yy", "=", "[", "]", "for", "kp_dict", "in", "json_dict", "[", "\"polygons\"", "]", "[", "0", "]", "[", "\"keypoints\"", "]", ":", "x", "=", "kp_dict", "[", "\"x\"", "]", "y", "=", "kp_dict", "[", "\"y\"", "]", "xx", ".", "append", "(", "x", ")", "yy", ".", "append", "(", "y", ")", "img_seg", "=", "np", ".", "zeros", "(", "(", "643", ",", "960", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "rr", ",", "cc", "=", "skimage", ".", "draw", ".", "polygon", "(", "np", ".", "array", "(", "yy", ")", ",", "np", ".", "array", "(", "xx", ")", ",", "shape", "=", "img_seg", ".", "shape", ")", "img_seg", "[", "rr", ",", "cc", "]", "=", "1.0", "if", "extract", "is", "not", "None", ":", "bb", "=", "_quokka_normalize_extract", "(", "extract", ")", "img_seg", "=", "bb", ".", "extract_from_image", "(", "img_seg", ")", "segmap", "=", "SegmentationMapOnImage", "(", "img_seg", ",", "shape", "=", "img_seg", ".", "shape", "[", "0", ":", "2", "]", "+", "(", "3", ",", ")", ")", "if", "size", "is", "not", "None", ":", "shape_resized", "=", "_compute_resized_shape", "(", "img_seg", ".", "shape", ",", "size", ")", "segmap", "=", "segmap", ".", "resize", "(", "shape_resized", "[", "0", ":", "2", "]", ")", "segmap", ".", "shape", "=", "tuple", "(", "shape_resized", "[", "0", ":", "2", "]", ")", "+", "(", "3", ",", ")", "return", "segmap"], "docstring_tokens": ["Returns", "a", "segmentation", "map", "for", "the", "standard", "example", "quokka", "image", "."]}
{"code_tokens": ["def", "quokka_keypoints", "(", "size", "=", "None", ",", "extract", "=", "None", ")", ":", "# TODO get rid of this deferred import", "from", "imgaug", ".", "augmentables", ".", "kps", "import", "Keypoint", ",", "KeypointsOnImage", "left", ",", "top", "=", "0", ",", "0", "if", "extract", "is", "not", "None", ":", "bb_extract", "=", "_quokka_normalize_extract", "(", "extract", ")", "left", "=", "bb_extract", ".", "x1", "top", "=", "bb_extract", ".", "y1", "with", "open", "(", "QUOKKA_ANNOTATIONS_FP", ",", "\"r\"", ")", "as", "f", ":", "json_dict", "=", "json", ".", "load", "(", "f", ")", "keypoints", "=", "[", "]", "for", "kp_dict", "in", "json_dict", "[", "\"keypoints\"", "]", ":", "keypoints", ".", "append", "(", "Keypoint", "(", "x", "=", "kp_dict", "[", "\"x\"", "]", "-", "left", ",", "y", "=", "kp_dict", "[", "\"y\"", "]", "-", "top", ")", ")", "if", "extract", "is", "not", "None", ":", "shape", "=", "(", "bb_extract", ".", "height", ",", "bb_extract", ".", "width", ",", "3", ")", "else", ":", "shape", "=", "(", "643", ",", "960", ",", "3", ")", "kpsoi", "=", "KeypointsOnImage", "(", "keypoints", ",", "shape", "=", "shape", ")", "if", "size", "is", "not", "None", ":", "shape_resized", "=", "_compute_resized_shape", "(", "shape", ",", "size", ")", "kpsoi", "=", "kpsoi", ".", "on", "(", "shape_resized", ")", "return", "kpsoi"], "docstring_tokens": ["Returns", "example", "keypoints", "on", "the", "standard", "example", "quokke", "image", "."]}
{"code_tokens": ["def", "quokka_bounding_boxes", "(", "size", "=", "None", ",", "extract", "=", "None", ")", ":", "# TODO get rid of this deferred import", "from", "imgaug", ".", "augmentables", ".", "bbs", "import", "BoundingBox", ",", "BoundingBoxesOnImage", "left", ",", "top", "=", "0", ",", "0", "if", "extract", "is", "not", "None", ":", "bb_extract", "=", "_quokka_normalize_extract", "(", "extract", ")", "left", "=", "bb_extract", ".", "x1", "top", "=", "bb_extract", ".", "y1", "with", "open", "(", "QUOKKA_ANNOTATIONS_FP", ",", "\"r\"", ")", "as", "f", ":", "json_dict", "=", "json", ".", "load", "(", "f", ")", "bbs", "=", "[", "]", "for", "bb_dict", "in", "json_dict", "[", "\"bounding_boxes\"", "]", ":", "bbs", ".", "append", "(", "BoundingBox", "(", "x1", "=", "bb_dict", "[", "\"x1\"", "]", "-", "left", ",", "y1", "=", "bb_dict", "[", "\"y1\"", "]", "-", "top", ",", "x2", "=", "bb_dict", "[", "\"x2\"", "]", "-", "left", ",", "y2", "=", "bb_dict", "[", "\"y2\"", "]", "-", "top", ")", ")", "if", "extract", "is", "not", "None", ":", "shape", "=", "(", "bb_extract", ".", "height", ",", "bb_extract", ".", "width", ",", "3", ")", "else", ":", "shape", "=", "(", "643", ",", "960", ",", "3", ")", "bbsoi", "=", "BoundingBoxesOnImage", "(", "bbs", ",", "shape", "=", "shape", ")", "if", "size", "is", "not", "None", ":", "shape_resized", "=", "_compute_resized_shape", "(", "shape", ",", "size", ")", "bbsoi", "=", "bbsoi", ".", "on", "(", "shape_resized", ")", "return", "bbsoi"], "docstring_tokens": ["Returns", "example", "bounding", "boxes", "on", "the", "standard", "example", "quokke", "image", "."]}
{"code_tokens": ["def", "quokka_polygons", "(", "size", "=", "None", ",", "extract", "=", "None", ")", ":", "# TODO get rid of this deferred import", "from", "imgaug", ".", "augmentables", ".", "polys", "import", "Polygon", ",", "PolygonsOnImage", "left", ",", "top", "=", "0", ",", "0", "if", "extract", "is", "not", "None", ":", "bb_extract", "=", "_quokka_normalize_extract", "(", "extract", ")", "left", "=", "bb_extract", ".", "x1", "top", "=", "bb_extract", ".", "y1", "with", "open", "(", "QUOKKA_ANNOTATIONS_FP", ",", "\"r\"", ")", "as", "f", ":", "json_dict", "=", "json", ".", "load", "(", "f", ")", "polygons", "=", "[", "]", "for", "poly_json", "in", "json_dict", "[", "\"polygons\"", "]", ":", "polygons", ".", "append", "(", "Polygon", "(", "[", "(", "point", "[", "\"x\"", "]", "-", "left", ",", "point", "[", "\"y\"", "]", "-", "top", ")", "for", "point", "in", "poly_json", "[", "\"keypoints\"", "]", "]", ")", ")", "if", "extract", "is", "not", "None", ":", "shape", "=", "(", "bb_extract", ".", "height", ",", "bb_extract", ".", "width", ",", "3", ")", "else", ":", "shape", "=", "(", "643", ",", "960", ",", "3", ")", "psoi", "=", "PolygonsOnImage", "(", "polygons", ",", "shape", "=", "shape", ")", "if", "size", "is", "not", "None", ":", "shape_resized", "=", "_compute_resized_shape", "(", "shape", ",", "size", ")", "psoi", "=", "psoi", ".", "on", "(", "shape_resized", ")", "return", "psoi"], "docstring_tokens": ["Returns", "example", "polygons", "on", "the", "standard", "example", "quokke", "image", "."]}
{"code_tokens": ["def", "angle_between_vectors", "(", "v1", ",", "v2", ")", ":", "l1", "=", "np", ".", "linalg", ".", "norm", "(", "v1", ")", "l2", "=", "np", ".", "linalg", ".", "norm", "(", "v2", ")", "v1_u", "=", "(", "v1", "/", "l1", ")", "if", "l1", ">", "0", "else", "np", ".", "float32", "(", "v1", ")", "*", "0", "v2_u", "=", "(", "v2", "/", "l2", ")", "if", "l2", ">", "0", "else", "np", ".", "float32", "(", "v2", ")", "*", "0", "return", "np", ".", "arccos", "(", "np", ".", "clip", "(", "np", ".", "dot", "(", "v1_u", ",", "v2_u", ")", ",", "-", "1.0", ",", "1.0", ")", ")"], "docstring_tokens": ["Returns", "the", "angle", "in", "radians", "between", "vectors", "v1", "and", "v2", "."]}
